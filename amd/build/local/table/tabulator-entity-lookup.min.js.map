{"version":3,"file":"tabulator-entity-lookup.min.js","sources":["../../../src/local/table/tabulator-entity-lookup.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * AMD module to store the entity lookup values\n *\n * @module   local_cltools/table/tabulator-entity-lookup.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call as ajaxCall} from \"core/ajax\";\nimport Notification from 'core/notification';\n/**\n *\n * @param formatterParams\n */\nexport function entityLookup(entityclass, displayfield) {\n    if (!entityLookup.LOOKUP_CACHE[entityclass]) {\n        entityLookup.LOOKUP_CACHE[entityclass] = [];\n    }\n\n    if (entityLookup.LOOKUP_CACHE[entityclass]\n        && entityLookup.LOOKUP_CACHE[entityclass][displayfield]) {\n        return entityLookup.LOOKUP_CACHE[entityclass][displayfield];\n    }\n    return Promise.race(\n        ajaxCall(\n            [{\n                methodname: 'cltools_entity_lookup',\n                args: {\n                    entityclass: entityclass,\n                    displayfield: displayfield,\n                }\n            }]\n        )).catch(Notification.exception)\n        .then(\n            (result) => {\n                if (result.warnings && result.warnings.length !== 0) {\n                    Notification.addNotification(\n                        {\n                            message: result.warnings.reduce((a, w) => (a + ' ' + w.message), '')\n                        }\n                    );\n                    return [];\n                }\n                entityLookup.LOOKUP_CACHE[entityclass][displayfield] = JSON.parse(result.values);\n                return entityLookup.LOOKUP_CACHE[entityclass][displayfield];\n            });\n}\n\nentityLookup.LOOKUP_CACHE = [];\n"],"names":["entityLookup","entityclass","displayfield","LOOKUP_CACHE","Promise","race","methodname","args","catch","Notification","exception","then","result","warnings","length","addNotification","message","reduce","a","w","JSON","parse","values"],"mappings":";;;;;;;cA4BgBA,aAAaC,YAAaC,qBACjCF,aAAaG,aAAaF,eAC3BD,aAAaG,aAAaF,aAAe,IAGzCD,aAAaG,aAAaF,cACvBD,aAAaG,aAAaF,aAAaC,cACnCF,aAAaG,aAAaF,aAAaC,cAE3CE,QAAQC,MACX,cACI,CAAC,CACGC,WAAY,wBACZC,KAAM,CACFN,YAAaA,YACbC,aAAcA,kBAGvBM,MAAMC,sBAAaC,WACrBC,MACG,SAACC,eACOA,OAAOC,UAAuC,IAA3BD,OAAOC,SAASC,8BACtBC,gBACT,CACIC,QAASJ,OAAOC,SAASI,QAAO,SAACC,EAAGC,UAAOD,EAAI,IAAMC,EAAEH,UAAU,MAGlE,KAEXhB,aAAaG,aAAaF,aAAaC,cAAgBkB,KAAKC,MAAMT,OAAOU,QAClEtB,aAAaG,aAAaF,aAAaC,iLAI9DF,aAAaG,aAAe"}