define("local_cltools/local/table/tabulator-edition",["exports","core/notification","./repository"],(function(_exports,_notification,_repository){var obj;
/**
   * AMD module to manage Tabulator cell editiion.
   *
   * @module   local_cltools/table/tabulator-edition.js
   * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.validateRemote=_exports.cellEdited=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};const formatWarnings=result=>{let message=null;return Array.isArray(result.warnings)&&result.warnings.length&&(message=result.warnings.reduce(((a,w)=>w.message+(a||"")),null)),message};_exports.validateRemote=async(tableHandler,tableHandlerParams,tableUniqueid,cell,value)=>{const args={handler:tableHandler,handlerparams:tableHandlerParams,uniqueid:tableUniqueid,id:cell.getData().id,field:cell.getField(),value:JSON.stringify(value)};return await(0,_repository.validateTableValue)(args).catch(_notification.default.exception).then((result=>{const message=formatWarnings(result);return message&&_notification.default.addNotification({message:message}),result.success}))};_exports.cellEdited=(tableHandler,tableHandlerParams,tableUniqueid,data)=>{const args={handler:tableHandler,handlerparams:tableHandlerParams,uniqueid:tableUniqueid,id:data.getData().id,field:data.getField(),value:JSON.stringify(data.getValue()),oldvalue:JSON.stringify(data.getOldValue())};return(0,_repository.setTableValue)(args).catch(_notification.default.exception).then((result=>{if(!result||!result.success){const message=formatWarnings(result);return message&&_notification.default.addNotification({message:message}),!1}return document.dispatchEvent(new CustomEvent("tabulator-cell-edited",args)),!0}))}}));

//# sourceMappingURL=tabulator-edition.min.js.map