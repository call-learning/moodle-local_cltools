define("local_cltools/local/table/tabulator-generic-lookup",["exports","core/notification","./repository"],(function(_exports,_notification,_repository){var obj;
/**
   * AMD module to store the moodle entity lookup values (non persistent, just straight tables)
   *
   * @module   local_cltools/table/tabulator-entity-lookup.js
   * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.prepareGenericLookup=_exports.genericLookup=void 0,_notification=(obj=_notification)&&obj.__esModule?obj:{default:obj};const computePrefix=mtype=>"genericLookup_"+mtype;_exports.genericLookup=mtype=>{const values=sessionStorage.getItem(computePrefix(mtype));return values?JSON.parse(values):[]};_exports.prepareGenericLookup=async mtype=>{window.onbeforeunload=()=>{sessionStorage.removeItem(computePrefix(mtype))};const lookupValues=await(0,_repository.genericTableLookup)({type:mtype}).catch(_notification.default.exception).then((result=>result.warnings&&0!==result.warnings.length?(_notification.default.addNotification({message:result.warnings.reduce(((a,w)=>a+" "+w.message),"")}),[]):Object.fromEntries(result.values.map((_ref=>{let{id:id,value:value}=_ref;return[id,value]})))));sessionStorage.setItem(computePrefix(mtype),JSON.stringify(lookupValues))}}));

//# sourceMappingURL=tabulator-generic-lookup.min.js.map