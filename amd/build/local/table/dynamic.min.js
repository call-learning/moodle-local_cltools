define("local_cltools/local/table/dynamic",["exports","local_cltools/local/table/tabulator-lazy","local_cltools/local/moment-lazy","jquery","core/notification","core/str","./tabulator-converters","./tabulator-edition","./moodle-filter-converters","./tabulator-formatters","./tabulator-editors","./repository"],(function(_exports,_tabulatorLazy,_momentLazy,_jquery,_notification,_str,_tabulatorConverters,_tabulatorEdition,_moodleFilterConverters,_tabulatorFormatters,_tabulatorEditors,_repository){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * AMD module to create a dynamic table a bit similar to the core
   * dynamic table but with more functionalities.
   * We use the Tabulator library.
   *
   * @module   local_cltools/table/dynamic.js
   * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.tableInit=_exports.init=void 0,_tabulatorLazy=_interopRequireDefault(_tabulatorLazy),_momentLazy=_interopRequireDefault(_momentLazy),_jquery=_interopRequireDefault(_jquery),_notification=_interopRequireDefault(_notification);const ajaxResponseProcessor=function(url,params,response){return response.data=response.data.map((rowstring=>JSON.parse(rowstring))),response};_exports.init=async tabulatorelementid=>{const tableelement=(0,_jquery.default)("#"+tabulatorelementid);tableInit("#"+tabulatorelementid,tableelement.data("tableHandler"),JSON.stringify(tableelement.data("tableHandlerParams")),tableelement.data("tableUniqueid"),tableelement.data("tablePagesize"),tableelement.data("tableFilters"),((e,row)=>{(0,_jquery.default)(document).trigger("tabulator-row-click",[row,tableelement.data("tableUniqueid")])}),tableelement.data("tableOtheroptions"),tableelement.data("tableEditable"),tableelement.data("tableActionsDefs"))};const tableInit=async(tableElement,tableHandler,tableHandlerParams,tableUniqueId,tablePageSize,tableFilters,rowClickCallback,otherOptions,tableEditable,tableActionsDefs)=>{let joinType,filters;void 0===window.moment&&(window.moment=_momentLazy.default);const placeHolderMessage=await(0,_str.get_string)("table:nodata","local_cltools");[joinType,filters]=(0,_moodleFilterConverters.convertInitialFilter)(tableFilters,[]);let columns=await(0,_repository.getTableColumns)({handler:tableHandler,handlerparams:tableHandlerParams,uniqueid:tableUniqueId,filters:filters,jointype:joinType,editable:tableEditable,actionsdefs:tableActionsDefs}).catch(_notification.default.exception);_tabulatorLazy.default.prototype.extendModule("format","formatters",_tabulatorFormatters.TABULATOR_FORMATTERS),_tabulatorLazy.default.prototype.extendModule("edit","editors",_tabulatorEditors.TABULATOR_EDITORS),columns=await(0,_tabulatorConverters.columnSetup)(columns,tableHandler,tableHandlerParams,tableUniqueId);let options={ajaxRequestFunc:function(url,config,params){const pageSize=this.table.getPageSize();return((tableHandler,tableHandlerParams,tableUniqueid,pageSize,params,initialFilters,tableEditable,tableActionsDefs)=>{let joinType,filters=(0,_moodleFilterConverters.convertFiltersToMoodle)(params.filters);[joinType,filters]=(0,_moodleFilterConverters.convertInitialFilter)(initialFilters,filters);const args={handler:tableHandler,handlerparams:tableHandlerParams,uniqueid:tableUniqueid,sortdata:void 0===params.sorters?[]:params.sorters.map((e=>({sortby:e.field,sortorder:e.dir.toUpperCase()}))),filters:filters,jointype:joinType,pagenumber:params.page,pagesize:pageSize,hiddencolumns:[],editable:tableEditable,actionsdefs:tableActionsDefs};return(0,_repository.getTableRows)(args).catch(_notification.default.exception)})(tableHandler,tableHandlerParams,tableUniqueId,pageSize,params,tableFilters,tableEditable,tableActionsDefs)},ajaxURL:!0,pagination:"remote",paginationSize:tablePageSize,ajaxFiltering:!0,ajaxSorting:!0,dataFiltered:function(){(0,_jquery.default)(document).trigger("tabulator-filter-changed",[tableHandler,tableHandlerParams,tableUniqueId,this.getFilters(!0)])},paginationDataReceived:{last_page:"pagescount"},ajaxResponse:ajaxResponseProcessor,cellEdited:function(data){(0,_tabulatorEdition.cellEdited)(tableHandler,tableHandlerParams,tableUniqueId,data)},validationMode:"highlight",columns:columns,layout:"fitColumns",placeholder:placeHolderMessage,rowClick:rowClickCallback||(()=>null)};"object"==typeof otherOptions&&null!==otherOptions&&Object.assign(options,otherOptions),new _tabulatorLazy.default(tableElement,options)};_exports.tableInit=tableInit}));

//# sourceMappingURL=dynamic.min.js.map