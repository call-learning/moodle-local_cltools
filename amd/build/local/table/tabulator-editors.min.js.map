{"version":3,"file":"tabulator-editors.min.js","sources":["../../../src/local/table/tabulator-editors.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * AMD module defining new Tabulator formatters\n *\n * @module   local_cltools/table/tabulator-formatter.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport moment from 'local_cltools/local/moment-lazy';\nimport {entityLookup} from \"./tabulator-entity-lookup\";\n\n/**\n * DateEditor\n *\n * @param {Object} cell\n * @param {Function} onRendered\n * @param {Function} success\n * @returns {HTMLInputElement}\n */\nexport const dateEditor = (cell, onRendered, success) => {\n    // Create and style editor.\n    var editor = document.createElement(\"input\");\n\n    editor.setAttribute(\"type\", \"date\");\n\n    // Create and style input.\n    editor.style.padding = \"3px\";\n    editor.style.width = \"100%\";\n    editor.style.boxSizing = \"border-box\";\n\n    // Set value of editor to the current value of the cell.\n    editor.value = moment(cell.getValue(), \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n\n    // Set focus on the select box when the editor is selected (timeout allows for editor to be added to DOM).\n    onRendered(function() {\n        editor.focus();\n        editor.style.css = \"100%\";\n    });\n\n    // When the value has been set, trigger the cell to update.\n    // eslint-disable-next-line require-jsdoc\n    function successFunc() {\n        success(moment(editor.value, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\"));\n    }\n\n    editor.addEventListener(\"change\", successFunc);\n    editor.addEventListener(\"blur\", successFunc);\n\n    // Return the editor element.\n    return editor;\n};\n\n\n/**\n * Table EDITOR\n * @type {{date: (function(*, *, *): HTMLInputElement), entity_lookup: (function(*=, *=, *=, *=, *): *)}}\n */\nexport const TABULATOR_EDITORS = {\n    date: dateEditor,\n    'entity_lookup': function(cell, onRendered, success, cancel, editorParams) {\n        return this.editors.select(cell, onRendered, success, cancel,\n            entityLookup(editorParams.entityclass, editorParams.displayfield));\n    }\n};"],"names":["dateEditor","cell","onRendered","success","editor","document","createElement","successFunc","value","format","setAttribute","style","padding","width","boxSizing","getValue","focus","css","addEventListener","TABULATOR_EDITORS","date","cancel","editorParams","this","editors","select","entityclass","displayfield"],"mappings":";;;;;;;uLAgCaA,WAAa,SAACC,KAAMC,WAAYC,aAErCC,OAASC,SAASC,cAAc,kBAoB3BC,cACLJ,SAAQ,uBAAOC,OAAOI,MAAO,cAAcC,OAAO,sBAnBtDL,OAAOM,aAAa,OAAQ,QAG5BN,OAAOO,MAAMC,QAAU,MACvBR,OAAOO,MAAME,MAAQ,OACrBT,OAAOO,MAAMG,UAAY,aAGzBV,OAAOI,OAAQ,uBAAOP,KAAKc,WAAY,cAAcN,OAAO,cAG5DP,YAAW,WACPE,OAAOY,QACPZ,OAAOO,MAAMM,IAAM,UASvBb,OAAOc,iBAAiB,SAAUX,aAClCH,OAAOc,iBAAiB,OAAQX,aAGzBH,2CAQEe,kBAAoB,CAC7BC,KAAMpB,yBACW,SAASC,KAAMC,WAAYC,QAASkB,OAAQC,qBAClDC,KAAKC,QAAQC,OAAOxB,KAAMC,WAAYC,QAASkB,QAClD,uCAAaC,aAAaI,YAAaJ,aAAaK"}