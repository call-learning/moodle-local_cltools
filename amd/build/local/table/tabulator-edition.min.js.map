{"version":3,"file":"tabulator-edition.min.js","sources":["../../../src/local/table/tabulator-edition.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to manage Tabulator cell editiion.\n *\n * @module   local_cltools/table/tabulator-edition.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Notification from 'core/notification';\nimport {setTableValue, validateTableValue} from \"./repository\";\n\n/**\n * Format warning\n * @param {Object} result\n * @returns {null|String}\n */\nconst formatWarnings = (result) => {\n    let message = null;\n    if (Array.isArray(result.warnings) && result.warnings.length) {\n        message = result.warnings.reduce((a, w) => (w.message + (a ? a : '')), null);\n    }\n    return message;\n};\n/**\n * Send the value back to server and send an tabulator-cell-edited event\n *\n * @param {String} tableHandler\n * @param {String} tableHandlerParams\n * @param {String} tableUniqueid\n * @param {Object} cell\n * @param {Object} value\n */\nexport const validateRemote = async(tableHandler, tableHandlerParams, tableUniqueid, cell, value) => {\n    const args = {\n        handler: tableHandler,\n        handlerparams: tableHandlerParams,\n        uniqueid: tableUniqueid,\n        id: cell.getData().id,\n        field: cell.getField(),\n        value: JSON.stringify(value)\n    };\n    return await validateTableValue(args).catch(Notification.exception).then(\n        (result) => {\n            const message = formatWarnings(result);\n            if (message) {\n                Notification.addNotification({message: message});\n            }\n            return result.success;\n        });\n};\n\n\n/**\n * Send the value back to server and send an tabulator-cell-edited event\n *\n * @param {String} tableHandler\n * @param {String} tableHandlerParams\n * @param {String} tableUniqueid\n * @param {Object} data\n * @return {Promise}\n */\nexport const cellEdited = (tableHandler, tableHandlerParams, tableUniqueid, data) => {\n    const args = {\n        handler: tableHandler,\n        handlerparams: tableHandlerParams,\n        uniqueid: tableUniqueid,\n        id: data.getData().id,\n        field: data.getField(),\n        value: JSON.stringify(data.getValue()),\n        oldvalue: JSON.stringify(data.getOldValue()),\n\n    };\n    return setTableValue(args).catch(Notification.exception).then(\n        (result) => {\n            if (result && result.success) {\n                document.dispatchEvent(new CustomEvent('tabulator-cell-edited', args));\n            } else {\n                const message = formatWarnings(result);\n                if (message) {\n                    Notification.addNotification({message: message});\n                }\n                return false;\n            }\n            return true;\n        });\n};\n"],"names":["formatWarnings","result","message","Array","isArray","warnings","length","reduce","a","w","validateRemote","tableHandler","tableHandlerParams","tableUniqueid","cell","value","args","handler","handlerparams","uniqueid","id","getData","field","getField","JSON","stringify","catch","Notification","exception","then","addNotification","success","data","getValue","oldvalue","getOldValue","document","dispatchEvent","CustomEvent"],"mappings":"gjBA+BMA,eAAiB,SAACC,YAChBC,QAAU,YACVC,MAAMC,QAAQH,OAAOI,WAAaJ,OAAOI,SAASC,SAClDJ,QAAUD,OAAOI,SAASE,QAAO,SAACC,EAAGC,UAAOA,EAAEP,SAAWM,GAAQ,MAAM,OAEpEN,SAWEQ,4CAAiB,iBAAMC,aAAcC,mBAAoBC,cAAeC,KAAMC,4HACjFC,KAAO,CACTC,QAASN,aACTO,cAAeN,mBACfO,SAAUN,cACVO,GAAIN,KAAKO,UAAUD,GACnBE,MAAOR,KAAKS,WACZR,MAAOS,KAAKC,UAAUV,yBAEb,kCAAmBC,MAAMU,MAAMC,sBAAaC,WAAWC,MAChE,SAAC5B,YACSC,QAAUF,eAAeC,eAC3BC,+BACa4B,gBAAgB,CAAC5B,QAASA,UAEpCD,OAAO8B,wiBAcA,SAACpB,aAAcC,mBAAoBC,cAAemB,UAClEhB,KAAO,CACTC,QAASN,aACTO,cAAeN,mBACfO,SAAUN,cACVO,GAAIY,KAAKX,UAAUD,GACnBE,MAAOU,KAAKT,WACZR,MAAOS,KAAKC,UAAUO,KAAKC,YAC3BC,SAAUV,KAAKC,UAAUO,KAAKG,uBAG3B,6BAAcnB,MAAMU,MAAMC,sBAAaC,WAAWC,MACrD,SAAC5B,YACOA,SAAUA,OAAO8B,QAEd,KACG7B,QAAUF,eAAeC,eAC3BC,+BACa4B,gBAAgB,CAAC5B,QAASA,WAEpC,SANPkC,SAASC,cAAc,IAAIC,YAAY,wBAAyBtB,QAQ7D"}