{"version":3,"sources":["../../../src/local/table/tabulator-edition.js"],"names":["formatWarnings","result","message","Array","isArray","warnings","length","reduce","a","w","validateRemote","tableHandler","tableHandlerParams","tableUniqueid","cell","value","args","handler","handlerparams","uniqueid","id","getData","field","getField","JSON","stringify","Promise","race","methodname","catch","Notification","exception","then","addNotification","success","cellEdited","data","getValue","oldvalue","getOldValue","document","dispatchEvent","CustomEvent"],"mappings":"qNAyBA,uD,kUAOMA,CAAAA,CAAc,CAAG,SAACC,CAAD,CAAY,CAC/B,GAAIC,CAAAA,CAAO,CAAG,IAAd,CACA,GAAIC,KAAK,CAACC,OAAN,CAAcH,CAAM,CAACI,QAArB,GAAkCJ,CAAM,CAACI,QAAP,CAAgBC,MAAtD,CAA8D,CAC1DJ,CAAO,CAAGD,CAAM,CAACI,QAAP,CAAgBE,MAAhB,CAAuB,SAACC,CAAD,CAAIC,CAAJ,QAAWA,CAAAA,CAAC,CAACP,OAAF,EAAaM,CAAC,CAAGA,CAAH,CAAO,EAArB,CAAX,CAAvB,CAA6D,IAA7D,CACb,CACD,MAAON,CAAAA,CACV,C,CAUYQ,CAAc,4CAAG,WAAOC,CAAP,CAAqBC,CAArB,CAAyCC,CAAzC,CAAwDC,CAAxD,CAA8DC,CAA9D,yFACpBC,CADoB,CACb,CACTC,OAAO,CAAEN,CADA,CAETO,aAAa,CAAEN,CAFN,CAGTO,QAAQ,CAAEN,CAHD,CAITO,EAAE,CAAEN,CAAI,CAACO,OAAL,GAAeD,EAJV,CAKTE,KAAK,CAAER,CAAI,CAACS,QAAL,EALE,CAMTR,KAAK,CAAES,IAAI,CAACC,SAAL,CAAeV,CAAf,CANE,CADa,gBASbW,CAAAA,OAAO,CAACC,IAAR,CACT,WACI,CAAC,CACGC,UAAU,CAAE,sCADf,CAEGZ,IAAI,CAAEA,CAFT,CAAD,CADJ,CADS,EAOXa,KAPW,CAOLC,UAAaC,SAPR,EAOmBC,IAPnB,CAQT,SAAC/B,CAAD,CAAY,CACR,GAAMC,CAAAA,CAAO,CAAGF,CAAc,CAACC,CAAD,CAA9B,CACA,GAAIC,CAAJ,CAAa,CACT4B,UAAaG,eAAb,CAA6B,CAAC/B,OAAO,CAAEA,CAAV,CAA7B,CACH,CACD,MAAOD,CAAAA,CAAM,CAACiC,OACjB,CAdQ,CATa,iFAAH,uD,oBAmCpB,GAAMC,CAAAA,CAAU,CAAG,SAACxB,CAAD,CAAeC,CAAf,CAAkCC,CAAlC,CAAiDuB,CAAjD,CAA0D,CAChF,GAAMpB,CAAAA,CAAI,CAAG,CACTC,OAAO,CAAEN,CADA,CAETO,aAAa,CAAEN,CAFN,CAGTO,QAAQ,CAAEN,CAHD,CAITO,EAAE,CAAEgB,CAAI,CAACf,OAAL,GAAeD,EAJV,CAKTE,KAAK,CAAEc,CAAI,CAACb,QAAL,EALE,CAMTR,KAAK,CAAES,IAAI,CAACC,SAAL,CAAeW,CAAI,CAACC,QAAL,EAAf,CANE,CAOTC,QAAQ,CAAEd,IAAI,CAACC,SAAL,CAAeW,CAAI,CAACG,WAAL,EAAf,CAPD,CAAb,CAUA,MAAOb,CAAAA,OAAO,CAACC,IAAR,CACH,WACI,CAAC,CACGC,UAAU,CAAE,iCADf,CAEGZ,IAAI,CAAEA,CAFT,CAAD,CADJ,CADG,EAOLa,KAPK,CAOCC,UAAaC,SAPd,EAOyBC,IAPzB,CAQH,SAAC/B,CAAD,CAAY,CACR,GAAIA,CAAM,EAAIA,CAAM,CAACiC,OAArB,CAA8B,CAC1BM,QAAQ,CAACC,aAAT,CAAuB,GAAIC,CAAAA,WAAJ,CAAgB,uBAAhB,CAAyC1B,CAAzC,CAAvB,CACH,CAFD,IAEO,CACH,GAAMd,CAAAA,CAAO,CAAGF,CAAc,CAACC,CAAD,CAA9B,CACA,GAAIC,CAAJ,CAAa,CACT4B,UAAaG,eAAb,CAA6B,CAAC/B,OAAO,CAAEA,CAAV,CAA7B,CACH,CACD,QACH,CACD,QACH,CAnBE,CAoBV,CA/BM,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to manage Tabulator cell editiion.\n *\n * @module   local_cltools/table/tabulator-edition.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\nimport {call as ajaxCall} from \"core/ajax\";\nimport Notification from 'core/notification';\n\n/**\n * Format warning\n * @param {Object} result\n * @returns {null|String}\n */\nconst formatWarnings = (result) => {\n    let message = null;\n    if (Array.isArray(result.warnings) && result.warnings.length) {\n        message = result.warnings.reduce((a, w) => (w.message + (a ? a : '')), null);\n    }\n    return message;\n};\n/**\n * Send the value back to server and send an tabulator-cell-edited event\n *\n * @param {String} tableHandler\n * @param {String} tableHandlerParams\n * @param {String} tableUniqueid\n * @param {Object} cell\n * @param {Object} cell\n */\nexport const validateRemote = async (tableHandler, tableHandlerParams, tableUniqueid, cell, value) => {\n    const args = {\n        handler: tableHandler,\n        handlerparams: tableHandlerParams,\n        uniqueid: tableUniqueid,\n        id: cell.getData().id,\n        field: cell.getField(),\n        value: JSON.stringify(value)\n    };\n    return await Promise.race(\n        ajaxCall(\n            [{\n                methodname: 'cltools_dynamic_table_validate_value',\n                args: args\n            }]\n        )\n    ).catch(Notification.exception).then(\n        (result) => {\n            const message = formatWarnings(result);\n            if (message) {\n                Notification.addNotification({message: message});\n            }\n            return result.success;\n        });\n};\n\n\n/**\n * Send the value back to server and send an tabulator-cell-edited event\n *\n * @param {String} tableHandler\n * @param {String} tableHandlerParams\n * @param {String} tableUniqueid\n * @param {Object} data\n */\nexport const cellEdited = (tableHandler, tableHandlerParams,tableUniqueid, data) => {\n    const args = {\n        handler: tableHandler,\n        handlerparams: tableHandlerParams,\n        uniqueid: tableUniqueid,\n        id: data.getData().id,\n        field: data.getField(),\n        value: JSON.stringify(data.getValue()),\n        oldvalue: JSON.stringify(data.getOldValue()),\n\n    };\n    return Promise.race(\n        ajaxCall(\n            [{\n                methodname: 'cltools_dynamic_table_set_value',\n                args: args\n            }]\n        )\n    ).catch(Notification.exception).then(\n        (result) => {\n            if (result && result.success) {\n                document.dispatchEvent(new CustomEvent('tabulator-cell-edited', args));\n            } else {\n                const message = formatWarnings(result);\n                if (message) {\n                    Notification.addNotification({message: message});\n                }\n                return false;\n            }\n            return true;\n        });\n};\n"],"file":"tabulator-edition.min.js"}