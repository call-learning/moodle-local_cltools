{"version":3,"file":"dynamic.min.js","sources":["../../../src/local/table/dynamic.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to create a dynamic table a bit similar to the core\n * dynamic table but with more functionalities.\n * We use the Tabulator library.\n *\n * @module   local_cltools/table/dynamic.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Tabulator from 'local_cltools/local/table/tabulator-lazy';\nimport moment from 'local_cltools/local/moment-lazy';\nimport $ from 'jquery';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {columnSetup} from './tabulator-converters';\nimport {cellEdited} from './tabulator-edition';\nimport {convertFiltersToMoodle, convertInitialFilter} from './moodle-filter-converters';\nimport {TABULATOR_FORMATTERS} from \"./tabulator-formatters\";\nimport {TABULATOR_EDITORS} from \"./tabulator-editors\";\nimport {getTableColumns, getTableRows} from \"./repository\";\n\n\nconst rowQuery = (tableHandler,\n                  tableHandlerParams,\n                  tableUniqueid,\n                  pageSize,\n                  params,\n                  initialFilters,\n                  tableEditable,\n                  tableActionsDefs) => {\n    let joinType;\n    let filters = convertFiltersToMoodle(params.filters);\n    [joinType, filters] = convertInitialFilter(initialFilters, filters);\n    const args = {\n        handler: tableHandler,\n        handlerparams: tableHandlerParams,\n        uniqueid: tableUniqueid,\n        sortdata: (typeof params.sorters === \"undefined\") ? [] : params.sorters.map(\n            (e) => {\n                return {'sortby': e.field, 'sortorder': e.dir.toUpperCase()};\n            }\n        ),\n        filters: filters,\n        jointype: joinType,\n        pagenumber: params.page,\n        pagesize: pageSize,\n        hiddencolumns: [],\n        editable: tableEditable,\n        actionsdefs: tableActionsDefs\n    };\n    return getTableRows(args).catch(Notification.exception);\n};\n\nconst ajaxResponseProcessor = function(url, params, response) {\n    response.data = response.data.map(\n        (rowstring) => JSON.parse(rowstring)\n    );\n    return response;\n};\n\nexport const init = async(tabulatorelementid) => {\n    const tableelement = $(\"#\" + tabulatorelementid);\n    const rowClickCallback = (e, row) => {\n        $(document).trigger('tabulator-row-click', [row, tableelement.data('tableUniqueid')]);\n    };\n    tableInit(\"#\" + tabulatorelementid,\n        tableelement.data('tableHandler'),\n        JSON.stringify(tableelement.data('tableHandlerParams')),\n        tableelement.data('tableUniqueid'),\n        tableelement.data('tablePagesize'),\n        tableelement.data('tableFilters'),\n        rowClickCallback,\n        tableelement.data('tableOtheroptions'),\n        tableelement.data('tableEditable'),\n        tableelement.data('tableActionsDefs'),\n    );\n};\nexport const tableInit = async(\n    tableElement,\n    tableHandler,\n    tableHandlerParams,\n    tableUniqueId,\n    tablePageSize,\n    tableFilters,\n    rowClickCallback,\n    otherOptions,\n    tableEditable,\n    tableActionsDefs\n) => {\n    let joinType, filters;\n    // Make sure momentjs is defined.\n    if (typeof window.moment == \"undefined\") {\n        window.moment = moment;\n    }\n    const placeHolderMessage = await getString('table:nodata', 'local_cltools');\n    [joinType, filters] = convertInitialFilter(tableFilters, []);\n    let columns = await getTableColumns({\n        handler: tableHandler,\n        handlerparams: tableHandlerParams,\n        uniqueid: tableUniqueId,\n        filters: filters,\n        jointype: joinType,\n        editable: tableEditable,\n        actionsdefs: tableActionsDefs\n    }).catch(Notification.exception);\n\n\n    Tabulator.prototype.extendModule(\"format\", \"formatters\", TABULATOR_FORMATTERS);\n    Tabulator.prototype.extendModule(\"edit\", \"editors\", TABULATOR_EDITORS);\n\n    columns = await columnSetup(columns, tableHandler, tableHandlerParams, tableUniqueId);\n\n    let options = {\n        ajaxRequestFunc: function(url, config, params) {\n            const pageSize = this.table.getPageSize();\n            return rowQuery(\n                tableHandler,\n                tableHandlerParams,\n                tableUniqueId,\n                pageSize,\n                params,\n                tableFilters,\n                tableEditable,\n                tableActionsDefs\n            );\n        },\n        ajaxURL: true, // If not set the RequestFunct will never be called.\n        pagination: \"remote\",\n        paginationSize: tablePageSize,\n        ajaxFiltering: true,\n        ajaxSorting: true,\n        dataFiltered: function() {\n            $(document).trigger('tabulator-filter-changed', [\n                    tableHandler, tableHandlerParams, tableUniqueId, this.getFilters(true)\n                ]\n            );\n        },\n        paginationDataReceived: {\n            \"last_page\": \"pagescount\", // Change last_page parameter name to \"pagescount\".\n        },\n        ajaxResponse: ajaxResponseProcessor,\n        cellEdited: function(data) {\n            cellEdited(tableHandler, tableHandlerParams, tableUniqueId, data);\n        },\n        validationMode: \"highlight\",\n        columns: columns,\n        layout: \"fitColumns\",\n        placeholder: placeHolderMessage,\n        rowClick: rowClickCallback ? rowClickCallback : () => null\n    };\n    if (typeof otherOptions === 'object' && otherOptions !== null) {\n        Object.assign(options, otherOptions);\n    }\n    new Tabulator(tableElement, options);\n};"],"names":["ajaxResponseProcessor","url","params","response","data","map","rowstring","JSON","parse","async","tableelement","tabulatorelementid","tableInit","stringify","e","row","document","trigger","tableElement","tableHandler","tableHandlerParams","tableUniqueId","tablePageSize","tableFilters","rowClickCallback","otherOptions","tableEditable","tableActionsDefs","joinType","filters","window","moment","placeHolderMessage","columns","handler","handlerparams","uniqueid","jointype","editable","actionsdefs","catch","Notification","exception","prototype","extendModule","TABULATOR_FORMATTERS","TABULATOR_EDITORS","options","ajaxRequestFunc","config","pageSize","this","table","getPageSize","tableUniqueid","initialFilters","args","sortdata","sorters","field","dir","toUpperCase","pagenumber","page","pagesize","hiddencolumns","rowQuery","ajaxURL","pagination","paginationSize","ajaxFiltering","ajaxSorting","dataFiltered","getFilters","paginationDataReceived","ajaxResponse","cellEdited","validationMode","layout","placeholder","rowClick","Object","assign","Tabulator"],"mappings":";;;;;;;;;6SAoEMA,sBAAwB,SAASC,IAAKC,OAAQC,iBAChDA,SAASC,KAAOD,SAASC,KAAKC,KACzBC,WAAcC,KAAKC,MAAMF,aAEvBH,wBAGSM,MAAAA,2BACVC,cAAe,mBAAE,IAAMC,oBAI7BC,UAAU,IAAMD,mBACZD,aAAaN,KAAK,gBAClBG,KAAKM,UAAUH,aAAaN,KAAK,uBACjCM,aAAaN,KAAK,iBAClBM,aAAaN,KAAK,iBAClBM,aAAaN,KAAK,iBARG,CAACU,EAAGC,2BACvBC,UAAUC,QAAQ,sBAAuB,CAACF,IAAKL,aAAaN,KAAK,qBASnEM,aAAaN,KAAK,qBAClBM,aAAaN,KAAK,iBAClBM,aAAaN,KAAK,4BAGbQ,UAAYH,MACrBS,aACAC,aACAC,mBACAC,cACAC,cACAC,aACAC,iBACAC,aACAC,cACAC,wBAEIC,SAAUC,aAEc,IAAjBC,OAAOC,SACdD,OAAOC,OAASA,2BAEdC,yBAA2B,mBAAU,eAAgB,kBAC1DJ,SAAUC,UAAW,gDAAqBN,aAAc,QACrDU,cAAgB,+BAAgB,CAChCC,QAASf,aACTgB,cAAef,mBACfgB,SAAUf,cACVQ,QAASA,QACTQ,SAAUT,SACVU,SAAUZ,cACVa,YAAaZ,mBACda,MAAMC,sBAAaC,kCAGZC,UAAUC,aAAa,SAAU,aAAcC,kEAC/CF,UAAUC,aAAa,OAAQ,UAAWE,qCAEpDb,cAAgB,oCAAYA,QAASd,aAAcC,mBAAoBC,mBAEnE0B,QAAU,CACVC,gBAAiB,SAAS/C,IAAKgD,OAAQ/C,cAC7BgD,SAAWC,KAAKC,MAAMC,oBA5FvB,EAAClC,aACAC,mBACAkC,cACAJ,SACAhD,OACAqD,eACA7B,cACAC,wBACVC,SACAC,SAAU,kDAAuB3B,OAAO2B,UAC3CD,SAAUC,UAAW,gDAAqB0B,eAAgB1B,eACrD2B,KAAO,CACTtB,QAASf,aACTgB,cAAef,mBACfgB,SAAUkB,cACVG,cAAqC,IAAnBvD,OAAOwD,QAA2B,GAAKxD,OAAOwD,QAAQrD,KACnES,IACU,QAAWA,EAAE6C,gBAAoB7C,EAAE8C,IAAIC,kBAGtDhC,QAASA,QACTQ,SAAUT,SACVkC,WAAY5D,OAAO6D,KACnBC,SAAUd,SACVe,cAAe,GACf3B,SAAUZ,cACVa,YAAaZ,yBAEV,4BAAa6B,MAAMhB,MAAMC,sBAAaC,YAiE9BwB,CACH/C,aACAC,mBACAC,cACA6B,SACAhD,OACAqB,aACAG,cACAC,mBAGRwC,SAAS,EACTC,WAAY,SACZC,eAAgB/C,cAChBgD,eAAe,EACfC,aAAa,EACbC,aAAc,+BACRxD,UAAUC,QAAQ,2BAA4B,CACxCE,aAAcC,mBAAoBC,cAAe8B,KAAKsB,YAAW,MAI7EC,uBAAwB,WACP,cAEjBC,aAAc3E,sBACd4E,WAAY,SAASxE,uCACNe,aAAcC,mBAAoBC,cAAejB,OAEhEyE,eAAgB,YAChB5C,QAASA,QACT6C,OAAQ,aACRC,YAAa/C,mBACbgD,SAAUxD,kBAAsC,KAAM,OAE9B,iBAAjBC,cAA8C,OAAjBA,cACpCwD,OAAOC,OAAOnC,QAAStB,kBAEvB0D,uBAAUjE,aAAc6B"}