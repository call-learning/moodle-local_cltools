{"version":3,"sources":["../../../src/local/table/dynamic.js"],"names":["convertInitialFilter","initialFilters","existingFilters","joinType","jointype","JOINTYPE_ALL","Array","prototype","push","apply","Object","values","filters","rowQuery","tableHandler","tableUniqueid","pageSize","params","map","e","filter","field","type","value","MOODLE_FILTER_CONVERTER","converter","to","transformer","args","handler","uniqueid","sortdata","sorters","dir","toUpperCase","pagenumber","page","pagesize","hiddencolumns","resetpreferences","firstinitial","lastinitial","Promise","race","methodname","catch","Notification","exception","ajaxResponseProcessor","url","response","data","rowstring","JSON","parse","init","tabulatorelementid","tableelement","rowClickCallback","row","document","trigger","tableInit","tableElement","tableUniqueId","tablePageSize","tableFilters","otherOptions","window","moment","placeHolderMessage","columns","Tabulator","extendModule","TABULATOR_FORMATTERS","options","ajaxRequestFunc","config","table","getPageSize","ajaxURL","pagination","paginationSize","ajaxFiltering","ajaxSorting","paginationDataReceived","ajaxResponse","layout","placeholder","rowClick","assign"],"mappings":"8XAwBA,OACA,OACA,OAEA,O,4lDAMMA,CAAAA,CAAoB,CAAG,SAACC,CAAD,CAAiBC,CAAjB,CAAqC,CAC9D,GAAMC,CAAAA,CAAQ,CAAGF,CAAc,CAAGA,CAAc,CAACG,QAAlB,CAA6BC,cAA5D,CACA,GAAIJ,CAAJ,CAAoB,CAEhBK,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BP,CAA3B,CAA4CQ,MAAM,CAACC,MAAP,CAAcV,CAAc,CAACW,OAA7B,CAA5C,CACH,CACD,MAAO,CAACT,CAAD,CAAWD,CAAX,CACV,C,CACKW,CAAQ,CAAG,SAACC,CAAD,CAAeC,CAAf,CAA8BC,CAA9B,CAAwCC,CAAxC,CAAgDhB,CAAhD,CAAmE,IAC5EE,CAAAA,CAD4E,CAE5ES,CAAO,CAA8B,WAA1B,QAAOK,CAAAA,CAAM,CAACL,OAAf,CAA0C,EAA1C,CAA+CK,CAAM,CAACL,OAAP,CAAeM,GAAf,CACzD,SAACC,CAAD,CAAO,CACH,GAAIC,CAAAA,CAAM,CAAG,CACT,KAAQD,CAAC,CAACE,KADD,CACQ,KAAQF,CAAC,CAACG,IADlB,CACwB,SAAYjB,cADpC,CACkD,OAAUc,CAAC,CAACI,KAD9D,CAAb,CAGA,GAAIJ,CAAC,CAACG,IAAF,GAAUE,0BAAd,CAAuC,CACnC,GAAMC,CAAAA,CAAS,CAAGD,0BAAwBL,CAAC,CAACG,IAA1B,CAAlB,CACAF,CAAM,CAACE,IAAP,CAAcG,CAAS,CAACC,EAAxB,CACA,GAAqC,WAAjC,QAAOD,CAAAA,CAAS,CAACE,WAArB,CAAkD,CAC9CP,CAAM,CAACT,MAAP,CAAgBc,CAAS,CAACE,WAAV,CAAsBR,CAAC,CAACI,KAAxB,CACnB,CACJ,CACD,MAAOH,CAAAA,CACV,CAbwD,CAFmB,GAiB1DpB,CAAoB,CAACC,CAAD,CAAiBW,CAAjB,CAjBsC,UAiB/ET,CAjB+E,MAiBrES,CAjBqE,MAkBhF,GAAMgB,CAAAA,CAAI,CAAG,CACTC,OAAO,CAAEf,CADA,CAETgB,QAAQ,CAAEf,CAFD,CAGTgB,QAAQ,CAA6B,WAA1B,QAAOd,CAAAA,CAAM,CAACe,OAAf,CAA0C,EAA1C,CAA+Cf,CAAM,CAACe,OAAP,CAAed,GAAf,CACrD,SAACC,CAAD,CAAO,CACH,MAAO,CAAC,OAAUA,CAAC,CAACE,KAAb,CAAoB,UAAaF,CAAC,CAACc,GAAF,CAAMC,WAAN,EAAjC,CACV,CAHoD,CAHhD,CAQTtB,OAAO,CAAEA,CARA,CASTR,QAAQ,CAAED,CATD,CAUTgC,UAAU,CAAElB,CAAM,CAACmB,IAVV,CAWTC,QAAQ,CAAErB,CAXD,CAYTsB,aAAa,CAAE,EAZN,CAaTC,gBAAgB,GAbP,CAcTC,YAAY,CAAE,GAdL,CAeTC,WAAW,CAAE,GAfJ,CAAb,CAiBA,MAAOC,CAAAA,OAAO,CAACC,IAAR,CACH,WACI,CAAC,CACGC,UAAU,CAAE,gCADf,CAEGhB,IAAI,CAAEA,CAFT,CAAD,CADJ,CADG,EAOLiB,KAPK,CAOCC,UAAaC,SAPd,CAQV,C,CAEKC,CAAqB,CAAG,SAAUC,CAAV,CAAehC,CAAf,CAAuBiC,CAAvB,CAAiC,CAC3DA,CAAQ,CAACC,IAAT,CAAgBD,CAAQ,CAACC,IAAT,CAAcjC,GAAd,CACZ,SAACkC,CAAD,QAAeC,CAAAA,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAf,CADY,CAAhB,CAGA,MAAOF,CAAAA,CACV,C,CAEYK,CAAI,4CAAG,WAAOC,CAAP,2FACVC,CADU,CACK,cAAE,IAAMD,CAAR,CADL,CAEVE,CAFU,CAES,SAACvC,CAAD,CAAIwC,CAAJ,CAAY,CACjC,cAAEC,QAAF,EAAYC,OAAZ,CAAoB,qBAApB,CAA2C,CAACF,CAAD,CAAMF,CAAY,CAACN,IAAb,CAAkB,eAAlB,CAAN,CAA3C,CACH,CAJe,CAKhBW,CAAS,CAAC,IAAMN,CAAP,CACLC,CAAY,CAACN,IAAb,CAAkB,cAAlB,CADK,CAELM,CAAY,CAACN,IAAb,CAAkB,eAAlB,CAFK,CAGLM,CAAY,CAACN,IAAb,CAAkB,eAAlB,CAHK,CAILM,CAAY,CAACN,IAAb,CAAkB,cAAlB,CAJK,CAKLO,CALK,CAMLD,CAAY,CAACN,IAAb,CAAkB,mBAAlB,CANK,CAAT,CALgB,wCAAH,uD,UAeV,GAAMW,CAAAA,CAAS,4CAAG,WACrBC,CADqB,CAErBjD,CAFqB,CAGrBkD,CAHqB,CAIrBC,CAJqB,CAKrBC,CALqB,CAMrBR,CANqB,CAOrBS,CAPqB,qGAWrB,GAA4B,WAAxB,QAAOC,CAAAA,MAAM,CAACC,MAAlB,CAAyC,CACrCD,MAAM,CAACC,MAAP,CAAgBA,SACnB,CAboB,eAcY,iBAAU,cAAV,CAA0B,eAA1B,CAdZ,QAcfC,CAde,UAeCtE,CAAoB,CAACkE,CAAD,CAAe,EAAf,CAfrB,UAepB/D,CAfoB,MAeVS,CAfU,sBAgBC8B,CAAAA,OAAO,CAACC,IAAR,CAAa,WAC/B,CAAC,CACGC,UAAU,CAAE,mCADf,CAEGhB,IAAI,CAAE,CACFC,OAAO,CAAEf,CADP,CAEFgB,QAAQ,CAAEkC,CAFR,CAGFpD,OAAO,CAAEA,CAHP,CAIFR,QAAQ,CAAED,CAJR,CAFT,CAAD,CAD+B,CAAb,EASb0C,KATa,CASPC,UAAaC,SATN,CAhBD,SAgBfwB,CAhBe,QA2BrBC,UAAUjE,SAAV,CAAoBkE,YAApB,CAAiC,QAAjC,CAA2C,YAA3C,CAAyDC,sBAAzD,EAEIC,CA7BiB,CA6BP,CACVC,eAAe,CAAE,yBAAU3B,CAAV,CAAe4B,CAAf,CAAuB5D,CAAvB,CAA+B,CAC5C,GAAMD,CAAAA,CAAQ,CAAG,KAAK8D,KAAL,CAAWC,WAAX,EAAjB,CACA,MAAOlE,CAAAA,CAAQ,CAACC,CAAD,CAAekD,CAAf,CAA8BhD,CAA9B,CAAwCC,CAAxC,CAAgDiD,CAAhD,CAClB,CAJS,CAKVc,OAAO,GALG,CAMVC,UAAU,CAAE,QANF,CAOVC,cAAc,CAAEjB,CAPN,CAQVkB,aAAa,GARH,CASVC,WAAW,GATD,CAUVC,sBAAsB,CAAE,CACpB,UAAa,YADO,CAVd,CAaVC,YAAY,CAAEtC,CAbJ,CAcVuB,OAAO,CAAE,+BAAyBA,CAAzB,CAdC,CAeVgB,MAAM,CAAE,YAfE,CAgBVC,WAAW,CAAElB,CAhBH,CAiBVmB,QAAQ,CAAE/B,CAAgB,CAAGA,CAAH,CAAsB,iBAAM,KAAN,CAjBtC,CA7BO,CAgDrB,GAA4B,QAAxB,KAAOS,CAAP,GAAqD,IAAjB,GAAAA,CAAxC,CAA+D,CAC3DzD,MAAM,CAACgF,MAAP,CAAcf,CAAd,CAAuBR,CAAvB,CACH,CACD,GAAIK,UAAJ,CAAcT,CAAd,CAA4BY,CAA5B,EAnDqB,yCAAH,uDAAf,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to create a dynamic table a bit similar to the core\n * dynamic table but with more functionalities.\n * We use the Tabulator library.\n *\n * @module   local_cltools/table/dynamic.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Tabulator from 'local_cltools/local/table/tabulator-lazy';\nimport moment from 'local_cltools/local/moment-lazy';\nimport $ from 'jquery';\nimport {call as ajaxCall} from 'core/ajax';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {formatterFilterTransform} from './tabulator-converters';\nimport {MOODLE_FILTER_CONVERTER, JOINTYPE_ALL} from './moodle-filter-converters';\nimport {TABULATOR_FORMATTERS} from \"./tabulator-formatters\";\n\nconst convertInitialFilter = (initialFilters, existingFilters) => {\n    const joinType = initialFilters ? initialFilters.jointype : JOINTYPE_ALL;\n    if (initialFilters) {\n        // Add initial filters to filters.\n        Array.prototype.push.apply(existingFilters, Object.values(initialFilters.filters));\n    }\n    return [joinType, existingFilters];\n};\nconst rowQuery = (tableHandler, tableUniqueid, pageSize, params, initialFilters) => {\n    let joinType;\n    let filters = (typeof params.filters === \"undefined\") ? [] : params.filters.map(\n        (e) => {\n            let filter = {\n                'name': e.field, 'type': e.type, 'jointype': JOINTYPE_ALL, 'values': e.value\n            };\n            if (e.type in MOODLE_FILTER_CONVERTER) {\n                const converter = MOODLE_FILTER_CONVERTER[e.type];\n                filter.type = converter.to;\n                if (typeof converter.transformer !== \"undefined\") {\n                    filter.values = converter.transformer(e.value);\n                }\n            }\n            return filter;\n        }\n    );\n    [joinType, filters] = convertInitialFilter(initialFilters, filters);\n    const args = {\n        handler: tableHandler,\n        uniqueid: tableUniqueid,\n        sortdata: (typeof params.sorters === \"undefined\") ? [] : params.sorters.map(\n            (e) => {\n                return {'sortby': e.field, 'sortorder': e.dir.toUpperCase()};\n            }\n        ),\n        filters: filters,\n        jointype: joinType,\n        pagenumber: params.page,\n        pagesize: pageSize,\n        hiddencolumns: [],\n        resetpreferences: false,\n        firstinitial: \"A\",\n        lastinitial: \"Z\"\n    };\n    return Promise.race(\n        ajaxCall(\n            [{\n                methodname: 'cltools_dynamic_table_get_rows',\n                args: args\n            }]\n        )\n    ).catch(Notification.exception);\n};\n\nconst ajaxResponseProcessor = function (url, params, response) {\n    response.data = response.data.map(\n        (rowstring) => JSON.parse(rowstring)\n    );\n    return response;\n};\n\nexport const init = async (tabulatorelementid) => {\n    const tableelement = $(\"#\" + tabulatorelementid);\n    const rowClickCallback = (e, row) => {\n        $(document).trigger('tabulator-row-click', [row, tableelement.data('tableUniqueid')]);\n    };\n    tableInit(\"#\" + tabulatorelementid,\n        tableelement.data('tableHandler'),\n        tableelement.data('tableUniqueid'),\n        tableelement.data('tablePagesize'),\n        tableelement.data('tableFilters'),\n        rowClickCallback,\n        tableelement.data('tableOtheroptions'),\n    );\n};\n\nexport const tableInit = async (\n    tableElement,\n    tableHandler,\n    tableUniqueId,\n    tablePageSize,\n    tableFilters,\n    rowClickCallback,\n    otherOptions\n) => {\n    let joinType, filters;\n    // Make sure momentjs is defined.\n    if (typeof window.moment == \"undefined\") {\n        window.moment = moment;\n    }\n    const placeHolderMessage = await getString('table:nodata', 'local_cltools');\n    [joinType, filters] = convertInitialFilter(tableFilters, []);\n    const columns = await Promise.race(ajaxCall(\n        [{\n            methodname: 'cltools_dynamic_table_get_columns',\n            args: {\n                handler: tableHandler,\n                uniqueid: tableUniqueId,\n                filters: filters,\n                jointype: joinType\n            }\n        }])).catch(Notification.exception);\n\n    Tabulator.prototype.extendModule(\"format\", \"formatters\", TABULATOR_FORMATTERS);\n\n    let options = {\n        ajaxRequestFunc: function (url, config, params) {\n            const pageSize = this.table.getPageSize();\n            return rowQuery(tableHandler, tableUniqueId, pageSize, params, tableFilters);\n        },\n        ajaxURL: true, // If not set the RequestFunct will never be called.\n        pagination: \"remote\",\n        paginationSize: tablePageSize,\n        ajaxFiltering: true,\n        ajaxSorting: true,\n        paginationDataReceived: {\n            \"last_page\": \"pagescount\", // Change last_page parameter name to \"pagescount\".\n        },\n        ajaxResponse: ajaxResponseProcessor,\n        columns: formatterFilterTransform(columns),\n        layout: \"fitColumns\",\n        placeholder: placeHolderMessage,\n        rowClick: rowClickCallback ? rowClickCallback : () => null\n    };\n    if (typeof otherOptions === 'object' && otherOptions !== null) {\n        Object.assign(options, otherOptions);\n    }\n    new Tabulator(tableElement, options);\n};"],"file":"dynamic.min.js"}