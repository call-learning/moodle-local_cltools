{"version":3,"sources":["../../../src/local/table/dynamic.js"],"names":["rowQuery","tableHandler","tableUniqueid","pageSize","params","initialFilters","joinType","filters","args","handler","uniqueid","sortdata","sorters","map","e","field","dir","toUpperCase","jointype","pagenumber","page","pagesize","hiddencolumns","resetpreferences","Promise","race","methodname","catch","Notification","exception","ajaxResponseProcessor","url","response","data","rowstring","JSON","parse","init","tabulatorelementid","tableelement","rowClickCallback","row","document","trigger","tableInit","tableElement","tableUniqueId","tablePageSize","tableFilters","otherOptions","window","moment","placeHolderMessage","columns","Tabulator","prototype","extendModule","TABULATOR_FORMATTERS","TABULATOR_EDITORS","options","ajaxRequestFunc","config","table","getPageSize","ajaxURL","pagination","paginationSize","ajaxFiltering","ajaxSorting","dataFiltered","getFilters","paginationDataReceived","ajaxResponse","cellEdited","validationMode","layout","placeholder","rowClick","Object","assign"],"mappings":"8aAwBA,OACA,OACA,OAEA,O,4lDASMA,CAAAA,CAAQ,CAAG,SAACC,CAAD,CAAeC,CAAf,CAA8BC,CAA9B,CAAwCC,CAAxC,CAAgDC,CAAhD,CAAmE,IAC5EC,CAAAA,CAD4E,CAE5EC,CAAO,CAAG,6BAAuBH,CAAM,CAACG,OAA9B,CAFkE,GAG1D,2BAAqBF,CAArB,CAAqCE,CAArC,CAH0D,UAG/ED,CAH+E,MAGrEC,CAHqE,MAIhF,GAAMC,CAAAA,CAAI,CAAG,CACTC,OAAO,CAAER,CADA,CAETS,QAAQ,CAAER,CAFD,CAGTS,QAAQ,CAA6B,WAA1B,QAAOP,CAAAA,CAAM,CAACQ,OAAf,CAA0C,EAA1C,CAA+CR,CAAM,CAACQ,OAAP,CAAeC,GAAf,CACrD,SAACC,CAAD,CAAO,CACH,MAAO,CAAC,OAAUA,CAAC,CAACC,KAAb,CAAoB,UAAaD,CAAC,CAACE,GAAF,CAAMC,WAAN,EAAjC,CACV,CAHoD,CAHhD,CAQTV,OAAO,CAAEA,CARA,CASTW,QAAQ,CAAEZ,CATD,CAUTa,UAAU,CAAEf,CAAM,CAACgB,IAVV,CAWTC,QAAQ,CAAElB,CAXD,CAYTmB,aAAa,CAAE,EAZN,CAaTC,gBAAgB,GAbP,CAAb,CAeA,MAAOC,CAAAA,OAAO,CAACC,IAAR,CACH,WACI,CAAC,CACGC,UAAU,CAAE,gCADf,CAEGlB,IAAI,CAAEA,CAFT,CAAD,CADJ,CADG,EAOLmB,KAPK,CAOCC,UAAaC,SAPd,CAQV,C,CAEKC,CAAqB,CAAG,SAAUC,CAAV,CAAe3B,CAAf,CAAuB4B,CAAvB,CAAiC,CAC3DA,CAAQ,CAACC,IAAT,CAAgBD,CAAQ,CAACC,IAAT,CAAcpB,GAAd,CACZ,SAACqB,CAAD,QAAeC,CAAAA,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAf,CADY,CAAhB,CAGA,MAAOF,CAAAA,CACV,C,CAEYK,CAAI,4CAAG,WAAOC,CAAP,2FACVC,CADU,CACK,cAAE,IAAMD,CAAR,CADL,CAEVE,CAFU,CAES,SAAC1B,CAAD,CAAI2B,CAAJ,CAAY,CACjC,cAAEC,QAAF,EAAYC,OAAZ,CAAoB,qBAApB,CAA2C,CAACF,CAAD,CAAMF,CAAY,CAACN,IAAb,CAAkB,eAAlB,CAAN,CAA3C,CACH,CAJe,CAKhBW,CAAS,CAAC,IAAMN,CAAP,CACLC,CAAY,CAACN,IAAb,CAAkB,cAAlB,CADK,CAELM,CAAY,CAACN,IAAb,CAAkB,eAAlB,CAFK,CAGLM,CAAY,CAACN,IAAb,CAAkB,eAAlB,CAHK,CAILM,CAAY,CAACN,IAAb,CAAkB,cAAlB,CAJK,CAKLO,CALK,CAMLD,CAAY,CAACN,IAAb,CAAkB,mBAAlB,CANK,CAAT,CALgB,wCAAH,uD,UAcV,GAAMW,CAAAA,CAAS,4CAAG,WACrBC,CADqB,CAErB5C,CAFqB,CAGrB6C,CAHqB,CAIrBC,CAJqB,CAKrBC,CALqB,CAMrBR,CANqB,CAOrBS,CAPqB,qGAWrB,GAA4B,WAAxB,QAAOC,CAAAA,MAAM,CAACC,MAAlB,CAAyC,CACrCD,MAAM,CAACC,MAAP,CAAgBA,SACnB,CAboB,eAcY,iBAAU,cAAV,CAA0B,eAA1B,CAdZ,QAcfC,CAde,UAeC,2BAAqBJ,CAArB,CAAmC,EAAnC,CAfD,UAepB1C,CAfoB,MAeVC,CAfU,sBAgBDiB,CAAAA,OAAO,CAACC,IAAR,CAAa,WAC7B,CAAC,CACGC,UAAU,CAAE,mCADf,CAEGlB,IAAI,CAAE,CACFC,OAAO,CAAER,CADP,CAEFS,QAAQ,CAAEoC,CAFR,CAGFvC,OAAO,CAAEA,CAHP,CAIFW,QAAQ,CAAEZ,CAJR,CAFT,CAAD,CAD6B,CAAb,EASXqB,KATW,CASLC,UAAaC,SATR,CAhBC,SAgBjBwB,CAhBiB,QA4BrBC,UAAUC,SAAV,CAAoBC,YAApB,CAAiC,QAAjC,CAA2C,YAA3C,CAAyDC,sBAAzD,EACAH,UAAUC,SAAV,CAAoBC,YAApB,CAAiC,QAAjC,CAA2C,QAA3C,CAAqDE,mBAArD,EA7BqB,gBA+BL,kBAAYL,CAAZ,CAAqBpD,CAArB,CAAmC6C,CAAnC,CA/BK,SA+BrBO,CA/BqB,QAiCjBM,CAjCiB,CAiCP,CACVC,eAAe,CAAE,yBAAU7B,CAAV,CAAe8B,CAAf,CAAuBzD,CAAvB,CAA+B,CAC5C,GAAMD,CAAAA,CAAQ,CAAG,KAAK2D,KAAL,CAAWC,WAAX,EAAjB,CACA,MAAO/D,CAAAA,CAAQ,CAACC,CAAD,CAAe6C,CAAf,CAA8B3C,CAA9B,CAAwCC,CAAxC,CAAgD4C,CAAhD,CAClB,CAJS,CAKVgB,OAAO,GALG,CAMVC,UAAU,CAAE,QANF,CAOVC,cAAc,CAAEnB,CAPN,CAQVoB,aAAa,GARH,CASVC,WAAW,GATD,CAUVC,YAAY,CAAE,uBAAY,CACtB,cAAE3B,QAAF,EAAYC,OAAZ,CAAoB,0BAApB,CAAgD,CACxC1C,CADwC,CAC1B6C,CAD0B,CACX,KAAKwB,UAAL,IADW,CAAhD,CAIH,CAfS,CAgBVC,sBAAsB,CAAE,CACpB,UAAa,YADO,CAhBd,CAmBVC,YAAY,CAAE1C,CAnBJ,CAoBV2C,UAAU,CAAE,oBAAUxC,CAAV,CAAgB,CACxB,iBAAWhC,CAAX,CAAyB6C,CAAzB,CAAwCb,CAAxC,CACH,CAtBS,CAuBVyC,cAAc,CAAE,WAvBN,CAwBVrB,OAAO,CAAEA,CAxBC,CAyBVsB,MAAM,CAAE,YAzBE,CA0BVC,WAAW,CAAExB,CA1BH,CA2BVyB,QAAQ,CAAErC,CAAgB,CAAGA,CAAH,CAAsB,iBAAM,KAAN,CA3BtC,CAjCO,CA8DrB,GAA4B,QAAxB,KAAOS,CAAP,GAAqD,IAAjB,GAAAA,CAAxC,CAA+D,CAC3D6B,MAAM,CAACC,MAAP,CAAcpB,CAAd,CAAuBV,CAAvB,CACH,CACD,GAAIK,UAAJ,CAAcT,CAAd,CAA4Bc,CAA5B,EAjEqB,yCAAH,uDAAf,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * AMD module to create a dynamic table a bit similar to the core\n * dynamic table but with more functionalities.\n * We use the Tabulator library.\n *\n * @module   local_cltools/table/dynamic.js\n * @copyright 2021 - CALL Learning - Laurent David <laurent@call-learning.fr>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Tabulator from 'local_cltools/local/table/tabulator-lazy';\nimport moment from 'local_cltools/local/moment-lazy';\nimport $ from 'jquery';\nimport {call as ajaxCall} from 'core/ajax';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {columnSetup} from './tabulator-converters';\nimport {cellEdited} from './tabulator-edition';\nimport {convertInitialFilter, convertFiltersToMoodle} from './moodle-filter-converters';\nimport {TABULATOR_FORMATTERS} from \"./tabulator-formatters\";\nimport {TABULATOR_EDITORS} from \"./tabulator-editors\";\n\n\nconst rowQuery = (tableHandler, tableUniqueid, pageSize, params, initialFilters) => {\n    let joinType;\n    let filters = convertFiltersToMoodle(params.filters);\n    [joinType, filters] = convertInitialFilter(initialFilters, filters);\n    const args = {\n        handler: tableHandler,\n        uniqueid: tableUniqueid,\n        sortdata: (typeof params.sorters === \"undefined\") ? [] : params.sorters.map(\n            (e) => {\n                return {'sortby': e.field, 'sortorder': e.dir.toUpperCase()};\n            }\n        ),\n        filters: filters,\n        jointype: joinType,\n        pagenumber: params.page,\n        pagesize: pageSize,\n        hiddencolumns: [],\n        resetpreferences: false\n    };\n    return Promise.race(\n        ajaxCall(\n            [{\n                methodname: 'cltools_dynamic_table_get_rows',\n                args: args\n            }]\n        )\n    ).catch(Notification.exception);\n};\n\nconst ajaxResponseProcessor = function (url, params, response) {\n    response.data = response.data.map(\n        (rowstring) => JSON.parse(rowstring)\n    );\n    return response;\n};\n\nexport const init = async (tabulatorelementid) => {\n    const tableelement = $(\"#\" + tabulatorelementid);\n    const rowClickCallback = (e, row) => {\n        $(document).trigger('tabulator-row-click', [row, tableelement.data('tableUniqueid')]);\n    };\n    tableInit(\"#\" + tabulatorelementid,\n        tableelement.data('tableHandler'),\n        tableelement.data('tableUniqueid'),\n        tableelement.data('tablePagesize'),\n        tableelement.data('tableFilters'),\n        rowClickCallback,\n        tableelement.data('tableOtheroptions'),\n    );\n};\nexport const tableInit = async (\n    tableElement,\n    tableHandler,\n    tableUniqueId,\n    tablePageSize,\n    tableFilters,\n    rowClickCallback,\n    otherOptions\n) => {\n    let joinType, filters;\n    // Make sure momentjs is defined.\n    if (typeof window.moment == \"undefined\") {\n        window.moment = moment;\n    }\n    const placeHolderMessage = await getString('table:nodata', 'local_cltools');\n    [joinType, filters] = convertInitialFilter(tableFilters, []);\n    let columns = await Promise.race(ajaxCall(\n        [{\n            methodname: 'cltools_dynamic_table_get_columns',\n            args: {\n                handler: tableHandler,\n                uniqueid: tableUniqueId,\n                filters: filters,\n                jointype: joinType\n            }\n        }])).catch(Notification.exception);\n\n\n    Tabulator.prototype.extendModule(\"format\", \"formatters\", TABULATOR_FORMATTERS);\n    Tabulator.prototype.extendModule(\"editor\", \"editor\", TABULATOR_EDITORS);\n\n    columns = await columnSetup(columns, tableHandler, tableUniqueId);\n\n    let options = {\n        ajaxRequestFunc: function (url, config, params) {\n            const pageSize = this.table.getPageSize();\n            return rowQuery(tableHandler, tableUniqueId, pageSize, params, tableFilters);\n        },\n        ajaxURL: true, // If not set the RequestFunct will never be called.\n        pagination: \"remote\",\n        paginationSize: tablePageSize,\n        ajaxFiltering: true,\n        ajaxSorting: true,\n        dataFiltered: function () {\n            $(document).trigger('tabulator-filter-changed', [\n                    tableHandler, tableUniqueId, this.getFilters(true)\n                ]\n            );\n        },\n        paginationDataReceived: {\n            \"last_page\": \"pagescount\", // Change last_page parameter name to \"pagescount\".\n        },\n        ajaxResponse: ajaxResponseProcessor,\n        cellEdited: function (data) {\n            cellEdited(tableHandler, tableUniqueId, data);\n        },\n        validationMode: \"highlight\",\n        columns: columns,\n        layout: \"fitColumns\",\n        placeholder: placeHolderMessage,\n        rowClick: rowClickCallback ? rowClickCallback : () => null\n    };\n    if (typeof otherOptions === 'object' && otherOptions !== null) {\n        Object.assign(options, otherOptions);\n    }\n    new Tabulator(tableElement, options);\n};"],"file":"dynamic.min.js"}