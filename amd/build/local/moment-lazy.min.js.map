{"version":3,"file":"moment-lazy.min.js","sources":["../../src/local/moment-lazy.js"],"sourcesContent":["/* eslint-disable */\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key;\n                for (i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i;\n            for (i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (\n                    matched,\n                    p1,\n                    p2,\n                    p3,\n                    p4\n                ) {\n                    return p1 || p2 || p3 || p4;\n                })\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n            '_'\n        ),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (\n        input,\n        array,\n        config,\n        token\n    ) {\n        var era = config._locale.erasParse(input, token, config._strict);\n        if (era) {\n            getParsingFlags(config).era = era;\n        } else {\n            getParsingFlags(config).invalidEra = input;\n        }\n    });\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (\n        input,\n        week,\n        config,\n        token\n    ) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.1';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('af', {\n        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(\n            '_'\n        ),\n        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM: function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Vandag om] LT',\n            nextDay: '[Môre om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[Gister om] LT',\n            lastWeek: '[Laas] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'oor %s',\n            past: '%s gelede',\n            s: \"'n paar sekondes\",\n            ss: '%d sekondes',\n            m: \"'n minuut\",\n            mm: '%d minute',\n            h: \"'n uur\",\n            hh: '%d ure',\n            d: \"'n dag\",\n            dd: '%d dae',\n            M: \"'n maand\",\n            MM: '%d maande',\n            y: \"'n jaar\",\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            ); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week: {\n            dow: 1, // Maandag is die eerste dag van die week.\n            doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var pluralForm = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                ? 1\n                : n === 2\n                ? 2\n                : n % 100 >= 3 && n % 100 <= 10\n                ? 3\n                : n % 100 >= 11\n                ? 4\n                : 5;\n        },\n        plurals = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm(number),\n                    str = plurals[u][pluralForm(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$1 = [\n            'جانفي',\n            'فيفري',\n            'مارس',\n            'أفريل',\n            'ماي',\n            'جوان',\n            'جويلية',\n            'أوت',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar-dz', {\n        months: months$1,\n        monthsShort: months$1,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize('s'),\n            ss: pluralize('s'),\n            m: pluralize('m'),\n            mm: pluralize('m'),\n            h: pluralize('h'),\n            hh: pluralize('h'),\n            d: pluralize('d'),\n            dd: pluralize('d'),\n            M: pluralize('M'),\n            MM: pluralize('M'),\n            y: pluralize('y'),\n            yy: pluralize('y'),\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-kw', {\n        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap = {\n            1: '1',\n            2: '2',\n            3: '3',\n            4: '4',\n            5: '5',\n            6: '6',\n            7: '7',\n            8: '8',\n            9: '9',\n            0: '0',\n        },\n        pluralForm$1 = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                ? 1\n                : n === 2\n                ? 2\n                : n % 100 >= 3 && n % 100 <= 10\n                ? 3\n                : n % 100 >= 11\n                ? 4\n                : 5;\n        },\n        plurals$1 = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize$1 = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm$1(number),\n                    str = plurals$1[u][pluralForm$1(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$2 = [\n            'يناير',\n            'فبراير',\n            'مارس',\n            'أبريل',\n            'مايو',\n            'يونيو',\n            'يوليو',\n            'أغسطس',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar-ly', {\n        months: months$2,\n        monthsShort: months$2,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize$1('s'),\n            ss: pluralize$1('s'),\n            m: pluralize$1('m'),\n            mm: pluralize$1('m'),\n            h: pluralize$1('h'),\n            hh: pluralize$1('h'),\n            d: pluralize$1('d'),\n            dd: pluralize$1('d'),\n            M: pluralize$1('M'),\n            MM: pluralize$1('M'),\n            y: pluralize$1('y'),\n            yy: pluralize$1('y'),\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-ma', {\n        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$1 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        };\n\n    hooks.defineLocale('ar-sa', {\n        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$1[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$2 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$1 = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        },\n        pluralForm$2 = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                ? 1\n                : n === 2\n                ? 2\n                : n % 100 >= 3 && n % 100 <= 10\n                ? 3\n                : n % 100 >= 11\n                ? 4\n                : 5;\n        },\n        plurals$2 = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize$2 = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm$2(number),\n                    str = plurals$2[u][pluralForm$2(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$3 = [\n            'يناير',\n            'فبراير',\n            'مارس',\n            'أبريل',\n            'مايو',\n            'يونيو',\n            'يوليو',\n            'أغسطس',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar', {\n        months: months$3,\n        monthsShort: months$3,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize$2('s'),\n            ss: pluralize$2('s'),\n            m: pluralize$2('m'),\n            mm: pluralize$2('m'),\n            h: pluralize$2('h'),\n            hh: pluralize$2('h'),\n            d: pluralize$2('d'),\n            dd: pluralize$2('d'),\n            M: pluralize$2('M'),\n            MM: pluralize$2('M'),\n            y: pluralize$2('y'),\n            yy: pluralize$2('y'),\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$1[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$2[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı',\n    };\n\n    hooks.defineLocale('az', {\n        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(\n            '_'\n        ),\n        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün saat] LT',\n            nextDay: '[sabah saat] LT',\n            nextWeek: '[gələn həftə] dddd [saat] LT',\n            lastDay: '[dünən] LT',\n            lastWeek: '[keçən həftə] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s sonra',\n            past: '%s əvvəl',\n            s: 'bir neçə saniyə',\n            ss: '%d saniyə',\n            m: 'bir dəqiqə',\n            mm: '%d dəqiqə',\n            h: 'bir saat',\n            hh: '%d saat',\n            d: 'bir gün',\n            dd: '%d gün',\n            M: 'bir ay',\n            MM: '%d ay',\n            y: 'bir il',\n            yy: '%d il',\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM: function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal: function (number) {\n            if (number === 0) {\n                // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = (number % 100) - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            dd: 'дзень_дні_дзён',\n            MM: 'месяц_месяцы_месяцаў',\n            yy: 'год_гады_гадоў',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    hooks.defineLocale('be', {\n        months: {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(\n                '_'\n            ),\n            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(\n            '_'\n        ),\n        weekdays: {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(\n                '_'\n            ),\n            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(\n                '_'\n            ),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/,\n        },\n        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY г.',\n            LLL: 'D MMMM YYYY г., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY г., HH:mm',\n        },\n        calendar: {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'праз %s',\n            past: '%s таму',\n            s: 'некалькі секунд',\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: relativeTimeWithPlural,\n            hh: relativeTimeWithPlural,\n            d: 'дзень',\n            dd: relativeTimeWithPlural,\n            M: 'месяц',\n            MM: relativeTimeWithPlural,\n            y: 'год',\n            yy: relativeTimeWithPlural,\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM: function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) &&\n                        number % 100 !== 12 &&\n                        number % 100 !== 13\n                        ? number + '-і'\n                        : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bg', {\n        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(\n            '_'\n        ),\n        monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(\n            '_'\n        ),\n        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Днес в] LT',\n            nextDay: '[Утре в] LT',\n            nextWeek: 'dddd [в] LT',\n            lastDay: '[Вчера в] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Миналата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Миналия] dddd [в] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'след %s',\n            past: 'преди %s',\n            s: 'няколко секунди',\n            ss: '%d секунди',\n            m: 'минута',\n            mm: '%d минути',\n            h: 'час',\n            hh: '%d часа',\n            d: 'ден',\n            dd: '%d дена',\n            w: 'седмица',\n            ww: '%d седмици',\n            M: 'месец',\n            MM: '%d месеца',\n            y: 'година',\n            yy: '%d години',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal: function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bm', {\n        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(\n            '_'\n        ),\n        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'MMMM [tile] D [san] YYYY',\n            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Bi lɛrɛ] LT',\n            nextDay: '[Sini lɛrɛ] LT',\n            nextWeek: 'dddd [don lɛrɛ] LT',\n            lastDay: '[Kunu lɛrɛ] LT',\n            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s kɔnɔ',\n            past: 'a bɛ %s bɔ',\n            s: 'sanga dama dama',\n            ss: 'sekondi %d',\n            m: 'miniti kelen',\n            mm: 'miniti %d',\n            h: 'lɛrɛ kelen',\n            hh: 'lɛrɛ %d',\n            d: 'tile kelen',\n            dd: 'tile %d',\n            M: 'kalo kelen',\n            MM: 'kalo %d',\n            y: 'san kelen',\n            yy: 'san %d',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$3 = {\n            1: '১',\n            2: '২',\n            3: '৩',\n            4: '৪',\n            5: '৫',\n            6: '৬',\n            7: '৭',\n            8: '৮',\n            9: '৯',\n            0: '০',\n        },\n        numberMap$2 = {\n            '১': '1',\n            '২': '2',\n            '৩': '3',\n            '৪': '4',\n            '৫': '5',\n            '৬': '6',\n            '৭': '7',\n            '৮': '8',\n            '৯': '9',\n            '০': '0',\n        };\n\n    hooks.defineLocale('bn-bd', {\n        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\n            '_'\n        ),\n        monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(\n            '_'\n        ),\n        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(\n            '_'\n        ),\n        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm সময়',\n            LTS: 'A h:mm:ss সময়',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm সময়',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n        },\n        calendar: {\n            sameDay: '[আজ] LT',\n            nextDay: '[আগামীকাল] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[গতকাল] LT',\n            lastWeek: '[গত] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s পরে',\n            past: '%s আগে',\n            s: 'কয়েক সেকেন্ড',\n            ss: '%d সেকেন্ড',\n            m: 'এক মিনিট',\n            mm: '%d মিনিট',\n            h: 'এক ঘন্টা',\n            hh: '%d ঘন্টা',\n            d: 'এক দিন',\n            dd: '%d দিন',\n            M: 'এক মাস',\n            MM: '%d মাস',\n            y: 'এক বছর',\n            yy: '%d বছর',\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$2[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$3[match];\n            });\n        },\n\n        meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'রাত') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ভোর') {\n                return hour;\n            } else if (meridiem === 'সকাল') {\n                return hour;\n            } else if (meridiem === 'দুপুর') {\n                return hour >= 3 ? hour : hour + 12;\n            } else if (meridiem === 'বিকাল') {\n                return hour + 12;\n            } else if (meridiem === 'সন্ধ্যা') {\n                return hour + 12;\n            }\n        },\n\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 6) {\n                return 'ভোর';\n            } else if (hour < 12) {\n                return 'সকাল';\n            } else if (hour < 15) {\n                return 'দুপুর';\n            } else if (hour < 18) {\n                return 'বিকাল';\n            } else if (hour < 20) {\n                return 'সন্ধ্যা';\n            } else {\n                return 'রাত';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$4 = {\n            1: '১',\n            2: '২',\n            3: '৩',\n            4: '৪',\n            5: '৫',\n            6: '৬',\n            7: '৭',\n            8: '৮',\n            9: '৯',\n            0: '০',\n        },\n        numberMap$3 = {\n            '১': '1',\n            '২': '2',\n            '৩': '3',\n            '৪': '4',\n            '৫': '5',\n            '৬': '6',\n            '৭': '7',\n            '৮': '8',\n            '৯': '9',\n            '০': '0',\n        };\n\n    hooks.defineLocale('bn', {\n        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\n            '_'\n        ),\n        monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(\n            '_'\n        ),\n        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(\n            '_'\n        ),\n        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm সময়',\n            LTS: 'A h:mm:ss সময়',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm সময়',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n        },\n        calendar: {\n            sameDay: '[আজ] LT',\n            nextDay: '[আগামীকাল] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[গতকাল] LT',\n            lastWeek: '[গত] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s পরে',\n            past: '%s আগে',\n            s: 'কয়েক সেকেন্ড',\n            ss: '%d সেকেন্ড',\n            m: 'এক মিনিট',\n            mm: '%d মিনিট',\n            h: 'এক ঘন্টা',\n            hh: '%d ঘন্টা',\n            d: 'এক দিন',\n            dd: '%d দিন',\n            M: 'এক মাস',\n            MM: '%d মাস',\n            y: 'এক বছর',\n            yy: '%d বছর',\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$3[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$4[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'রাত' && hour >= 4) ||\n                (meridiem === 'দুপুর' && hour < 5) ||\n                meridiem === 'বিকাল'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$5 = {\n            1: '༡',\n            2: '༢',\n            3: '༣',\n            4: '༤',\n            5: '༥',\n            6: '༦',\n            7: '༧',\n            8: '༨',\n            9: '༩',\n            0: '༠',\n        },\n        numberMap$4 = {\n            '༡': '1',\n            '༢': '2',\n            '༣': '3',\n            '༤': '4',\n            '༥': '5',\n            '༦': '6',\n            '༧': '7',\n            '༨': '8',\n            '༩': '9',\n            '༠': '0',\n        };\n\n    hooks.defineLocale('bo', {\n        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(\n            '_'\n        ),\n        monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(\n            '_'\n        ),\n        monthsShortRegex: /^(ཟླ་\\d{1,2})/,\n        monthsParseExact: true,\n        weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(\n            '_'\n        ),\n        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(\n            '_'\n        ),\n        weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[དི་རིང] LT',\n            nextDay: '[སང་ཉིན] LT',\n            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay: '[ཁ་སང] LT',\n            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ལ་',\n            past: '%s སྔན་ལ',\n            s: 'ལམ་སང',\n            ss: '%d སྐར་ཆ།',\n            m: 'སྐར་མ་གཅིག',\n            mm: '%d སྐར་མ',\n            h: 'ཆུ་ཚོད་གཅིག',\n            hh: '%d ཆུ་ཚོད',\n            d: 'ཉིན་གཅིག',\n            dd: '%d ཉིན་',\n            M: 'ཟླ་བ་གཅིག',\n            MM: '%d ཟླ་བ',\n            y: 'ལོ་གཅིག',\n            yy: '%d ལོ',\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap$4[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$5[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'མཚན་མོ' && hour >= 4) ||\n                (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                meridiem === 'དགོང་དག'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            mm: 'munutenn',\n            MM: 'miz',\n            dd: 'devezh',\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            m: 'v',\n            b: 'v',\n            d: 'z',\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var monthsParse = [\n            /^gen/i,\n            /^c[ʼ\\']hwe/i,\n            /^meu/i,\n            /^ebr/i,\n            /^mae/i,\n            /^(mez|eve)/i,\n            /^gou/i,\n            /^eos/i,\n            /^gwe/i,\n            /^her/i,\n            /^du/i,\n            /^ker/i,\n        ],\n        monthsRegex$1 = /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n        monthsStrictRegex = /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,\n        monthsShortStrictRegex = /^(gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n        fullWeekdaysParse = [\n            /^sul/i,\n            /^lun/i,\n            /^meurzh/i,\n            /^merc[ʼ\\']her/i,\n            /^yaou/i,\n            /^gwener/i,\n            /^sadorn/i,\n        ],\n        shortWeekdaysParse = [\n            /^Sul/i,\n            /^Lun/i,\n            /^Meu/i,\n            /^Mer/i,\n            /^Yao/i,\n            /^Gwe/i,\n            /^Sad/i,\n        ],\n        minWeekdaysParse = [\n            /^Su/i,\n            /^Lu/i,\n            /^Me([^r]|$)/i,\n            /^Mer/i,\n            /^Ya/i,\n            /^Gw/i,\n            /^Sa/i,\n        ];\n\n    hooks.defineLocale('br', {\n        months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(\n            '_'\n        ),\n        monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParse: minWeekdaysParse,\n        fullWeekdaysParse: fullWeekdaysParse,\n        shortWeekdaysParse: shortWeekdaysParse,\n        minWeekdaysParse: minWeekdaysParse,\n\n        monthsRegex: monthsRegex$1,\n        monthsShortRegex: monthsRegex$1,\n        monthsStrictRegex: monthsStrictRegex,\n        monthsShortStrictRegex: monthsShortStrictRegex,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [a viz] MMMM YYYY',\n            LLL: 'D [a viz] MMMM YYYY HH:mm',\n            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hiziv da] LT',\n            nextDay: '[Warcʼhoazh da] LT',\n            nextWeek: 'dddd [da] LT',\n            lastDay: '[Decʼh da] LT',\n            lastWeek: 'dddd [paset da] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'a-benn %s',\n            past: '%s ʼzo',\n            s: 'un nebeud segondennoù',\n            ss: '%d eilenn',\n            m: 'ur vunutenn',\n            mm: relativeTimeWithMutation,\n            h: 'un eur',\n            hh: '%d eur',\n            d: 'un devezh',\n            dd: relativeTimeWithMutation,\n            M: 'ur miz',\n            MM: relativeTimeWithMutation,\n            y: 'ur bloaz',\n            yy: specialMutationForYears,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'añ' : 'vet';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn\n        isPM: function (token) {\n            return token === 'g.m.';\n        },\n        meridiem: function (hour, minute, isLower) {\n            return hour < 12 ? 'a.m.' : 'g.m.';\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('bs', {\n        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate,\n            m: translate,\n            mm: translate,\n            h: translate,\n            hh: translate,\n            d: 'dan',\n            dd: translate,\n            M: 'mjesec',\n            MM: translate,\n            y: 'godinu',\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ca', {\n        months: {\n            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(\n                '_'\n            ),\n            format: \"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre\".split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\s)+MMMM/,\n        },\n        monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(\n            '_'\n        ),\n        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [de] YYYY',\n            ll: 'D MMM YYYY',\n            LLL: 'D MMMM [de] YYYY [a les] H:mm',\n            lll: 'D MMM YYYY, H:mm',\n            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll: 'ddd D MMM YYYY, H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            nextDay: function () {\n                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            lastDay: function () {\n                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [passat a ' +\n                    (this.hours() !== 1 ? 'les' : 'la') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: \"d'aquí %s\",\n            past: 'fa %s',\n            s: 'uns segons',\n            ss: '%d segons',\n            m: 'un minut',\n            mm: '%d minuts',\n            h: 'una hora',\n            hh: '%d hores',\n            d: 'un dia',\n            dd: '%d dies',\n            M: 'un mes',\n            MM: '%d mesos',\n            y: 'un any',\n            yy: '%d anys',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal: function (number, period) {\n            var output =\n                number === 1\n                    ? 'r'\n                    : number === 2\n                    ? 'n'\n                    : number === 3\n                    ? 'r'\n                    : number === 4\n                    ? 't'\n                    : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$4 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(\n            '_'\n        ),\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n        monthsParse$1 = [\n            /^led/i,\n            /^úno/i,\n            /^bře/i,\n            /^dub/i,\n            /^kvě/i,\n            /^(čvn|červen$|června)/i,\n            /^(čvc|červenec|července)/i,\n            /^srp/i,\n            /^zář/i,\n            /^říj/i,\n            /^lis/i,\n            /^pro/i,\n        ],\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsRegex$2 = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural$1(n) {\n        return n > 1 && n < 5 && ~~(n / 10) !== 1;\n    }\n    function translate$1(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n        }\n    }\n\n    hooks.defineLocale('cs', {\n        months: months$4,\n        monthsShort: monthsShort,\n        monthsRegex: monthsRegex$2,\n        monthsShortRegex: monthsRegex$2,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse: monthsParse$1,\n        longMonthsParse: monthsParse$1,\n        shortMonthsParse: monthsParse$1,\n        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n            l: 'D. M. YYYY',\n        },\n        calendar: {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'před %s',\n            s: translate$1,\n            ss: translate$1,\n            m: translate$1,\n            mm: translate$1,\n            h: translate$1,\n            hh: translate$1,\n            d: translate$1,\n            dd: translate$1,\n            M: translate$1,\n            MM: translate$1,\n            y: translate$1,\n            yy: translate$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cv', {\n        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(\n            '_'\n        ),\n        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(\n            '_'\n        ),\n        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n        },\n        calendar: {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (output) {\n                var affix = /сехет$/i.exec(output)\n                    ? 'рен'\n                    : /ҫул$/i.exec(output)\n                    ? 'тан'\n                    : 'ран';\n                return output + affix;\n            },\n            past: '%s каялла',\n            s: 'пӗр-ик ҫеккунт',\n            ss: '%d ҫеккунт',\n            m: 'пӗр минут',\n            mm: '%d минут',\n            h: 'пӗр сехет',\n            hh: '%d сехет',\n            d: 'пӗр кун',\n            dd: '%d кун',\n            M: 'пӗр уйӑх',\n            MM: '%d уйӑх',\n            y: 'пӗр ҫул',\n            yy: '%d ҫул',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal: '%d-мӗш',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(\n            '_'\n        ),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(\n            '_'\n        ),\n        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact: true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '',\n                    'af',\n                    'il',\n                    'ydd',\n                    'ydd',\n                    'ed',\n                    'ed',\n                    'ed',\n                    'fed',\n                    'fed',\n                    'fed', // 1af to 10fed\n                    'eg',\n                    'fed',\n                    'eg',\n                    'eg',\n                    'fed',\n                    'eg',\n                    'eg',\n                    'fed',\n                    'eg',\n                    'fed', // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('da', {\n        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'på dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[i] dddd[s kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s siden',\n            s: 'få sekunder',\n            ss: '%d sekunder',\n            m: 'et minut',\n            mm: '%d minutter',\n            h: 'en time',\n            hh: '%d timer',\n            d: 'en dag',\n            dd: '%d dage',\n            M: 'en måned',\n            MM: '%d måneder',\n            y: 'et år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-at', {\n        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n            '_'\n        ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime,\n            mm: '%d Minuten',\n            h: processRelativeTime,\n            hh: '%d Stunden',\n            d: processRelativeTime,\n            dd: processRelativeTime,\n            w: processRelativeTime,\n            ww: '%d Wochen',\n            M: processRelativeTime,\n            MM: processRelativeTime,\n            y: processRelativeTime,\n            yy: processRelativeTime,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$1(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-ch', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n            '_'\n        ),\n        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$1,\n            mm: '%d Minuten',\n            h: processRelativeTime$1,\n            hh: '%d Stunden',\n            d: processRelativeTime$1,\n            dd: processRelativeTime$1,\n            w: processRelativeTime$1,\n            ww: '%d Wochen',\n            M: processRelativeTime$1,\n            MM: processRelativeTime$1,\n            y: processRelativeTime$1,\n            yy: processRelativeTime$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n            '_'\n        ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$2,\n            mm: '%d Minuten',\n            h: processRelativeTime$2,\n            hh: '%d Stunden',\n            d: processRelativeTime$2,\n            dd: processRelativeTime$2,\n            w: processRelativeTime$2,\n            ww: '%d Wochen',\n            M: processRelativeTime$2,\n            MM: processRelativeTime$2,\n            y: processRelativeTime$2,\n            yy: processRelativeTime$2,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$5 = [\n            'ޖެނުއަރީ',\n            'ފެބްރުއަރީ',\n            'މާރިޗު',\n            'އޭޕްރީލު',\n            'މޭ',\n            'ޖޫން',\n            'ޖުލައި',\n            'އޯގަސްޓު',\n            'ސެޕްޓެމްބަރު',\n            'އޮކްޓޯބަރު',\n            'ނޮވެމްބަރު',\n            'ޑިސެމްބަރު',\n        ],\n        weekdays = [\n            'އާދިއްތަ',\n            'ހޯމަ',\n            'އަންގާރަ',\n            'ބުދަ',\n            'ބުރާސްފަތި',\n            'ހުކުރު',\n            'ހޮނިހިރު',\n        ];\n\n    hooks.defineLocale('dv', {\n        months: months$5,\n        monthsShort: months$5,\n        weekdays: weekdays,\n        weekdaysShort: weekdays,\n        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/M/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM: function (input) {\n            return 'މފ' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar: {\n            sameDay: '[މިއަދު] LT',\n            nextDay: '[މާދަމާ] LT',\n            nextWeek: 'dddd LT',\n            lastDay: '[އިއްޔެ] LT',\n            lastWeek: '[ފާއިތުވި] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ތެރޭގައި %s',\n            past: 'ކުރިން %s',\n            s: 'ސިކުންތުކޮޅެއް',\n            ss: 'd% ސިކުންތު',\n            m: 'މިނިޓެއް',\n            mm: 'މިނިޓު %d',\n            h: 'ގަޑިއިރެއް',\n            hh: 'ގަޑިއިރު %d',\n            d: 'ދުވަހެއް',\n            dd: 'ދުވަސް %d',\n            M: 'މަހެއް',\n            MM: 'މަސް %d',\n            y: 'އަހަރެއް',\n            yy: 'އަހަރު %d',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 7, // Sunday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function isFunction$1(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    hooks.defineLocale('el', {\n        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(\n            '_'\n        ),\n        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(\n            '_'\n        ),\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (\n                typeof format === 'string' &&\n                /D/.test(format.substring(0, format.indexOf('MMMM')))\n            ) {\n                // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(\n            '_'\n        ),\n        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM: function (input) {\n            return (input + '').toLowerCase()[0] === 'μ';\n        },\n        meridiemParse: /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendarEl: {\n            sameDay: '[Σήμερα {}] LT',\n            nextDay: '[Αύριο {}] LT',\n            nextWeek: 'dddd [{}] LT',\n            lastDay: '[Χθες {}] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        calendar: function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction$1(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');\n        },\n        relativeTime: {\n            future: 'σε %s',\n            past: '%s πριν',\n            s: 'λίγα δευτερόλεπτα',\n            ss: '%d δευτερόλεπτα',\n            m: 'ένα λεπτό',\n            mm: '%d λεπτά',\n            h: 'μία ώρα',\n            hh: '%d ώρες',\n            d: 'μία μέρα',\n            dd: '%d μέρες',\n            M: 'ένας μήνας',\n            MM: '%d μήνες',\n            y: 'ένας χρόνος',\n            yy: '%d χρόνια',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-au', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ca', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'YYYY-MM-DD',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY h:mm A',\n            LLLL: 'dddd, MMMM D, YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-gb', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ie', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-il', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-in', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-nz', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-sg', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eo', {\n        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),\n        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: '[la] D[-an de] MMMM, YYYY',\n            LLL: '[la] D[-an de] MMMM, YYYY HH:mm',\n            LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',\n            llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar: {\n            sameDay: '[Hodiaŭ je] LT',\n            nextDay: '[Morgaŭ je] LT',\n            nextWeek: 'dddd[n je] LT',\n            lastDay: '[Hieraŭ je] LT',\n            lastWeek: '[pasintan] dddd[n je] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'post %s',\n            past: 'antaŭ %s',\n            s: 'kelkaj sekundoj',\n            ss: '%d sekundoj',\n            m: 'unu minuto',\n            mm: '%d minutoj',\n            h: 'unu horo',\n            hh: '%d horoj',\n            d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo\n            dd: '%d tagoj',\n            M: 'unu monato',\n            MM: '%d monatoj',\n            y: 'unu jaro',\n            yy: '%d jaroj',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal: '%da',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n            '_'\n        ),\n        monthsShort$1 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$2 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$3 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-do', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$1[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$3,\n        monthsShortRegex: monthsRegex$3,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$2,\n        longMonthsParse: monthsParse$2,\n        shortMonthsParse: monthsParse$2,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n            '_'\n        ),\n        monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$3 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$4 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-mx', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$2[m.month()];\n            } else {\n                return monthsShortDot$1[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$4,\n        monthsShortRegex: monthsRegex$4,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$3,\n        longMonthsParse: monthsParse$3,\n        shortMonthsParse: monthsParse$3,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha inválida',\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n            '_'\n        ),\n        monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$4 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$5 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-us', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$3[m.month()];\n            } else {\n                return monthsShortDot$2[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$5,\n        monthsShortRegex: monthsRegex$5,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$4,\n        longMonthsParse: monthsParse$4,\n        shortMonthsParse: monthsParse$4,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'MM/DD/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n            '_'\n        ),\n        monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$5 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$6 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$3;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$4[m.month()];\n            } else {\n                return monthsShortDot$3[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$6,\n        monthsShortRegex: monthsRegex$6,\n        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$5,\n        longMonthsParse: monthsParse$5,\n        shortMonthsParse: monthsParse$5,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha inválida',\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$3(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            ss: [number + 'sekundi', number + 'sekundit'],\n            m: ['ühe minuti', 'üks minut'],\n            mm: [number + ' minuti', number + ' minutit'],\n            h: ['ühe tunni', 'tund aega', 'üks tund'],\n            hh: [number + ' tunni', number + ' tundi'],\n            d: ['ühe päeva', 'üks päev'],\n            M: ['kuu aja', 'kuu aega', 'üks kuu'],\n            MM: [number + ' kuu', number + ' kuud'],\n            y: ['ühe aasta', 'aasta', 'üks aasta'],\n            yy: [number + ' aasta', number + ' aastat'],\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('et', {\n        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(\n            '_'\n        ),\n        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(\n            '_'\n        ),\n        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(\n            '_'\n        ),\n        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Täna,] LT',\n            nextDay: '[Homme,] LT',\n            nextWeek: '[Järgmine] dddd LT',\n            lastDay: '[Eile,] LT',\n            lastWeek: '[Eelmine] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s pärast',\n            past: '%s tagasi',\n            s: processRelativeTime$3,\n            ss: processRelativeTime$3,\n            m: processRelativeTime$3,\n            mm: processRelativeTime$3,\n            h: processRelativeTime$3,\n            hh: processRelativeTime$3,\n            d: processRelativeTime$3,\n            dd: '%d päeva',\n            M: processRelativeTime$3,\n            MM: processRelativeTime$3,\n            y: processRelativeTime$3,\n            yy: processRelativeTime$3,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eu', {\n        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(\n            '_'\n        ),\n        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(\n            '_'\n        ),\n        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY[ko] MMMM[ren] D[a]',\n            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l: 'YYYY-M-D',\n            ll: 'YYYY[ko] MMM D[a]',\n            lll: 'YYYY[ko] MMM D[a] HH:mm',\n            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',\n        },\n        calendar: {\n            sameDay: '[gaur] LT[etan]',\n            nextDay: '[bihar] LT[etan]',\n            nextWeek: 'dddd LT[etan]',\n            lastDay: '[atzo] LT[etan]',\n            lastWeek: '[aurreko] dddd LT[etan]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s barru',\n            past: 'duela %s',\n            s: 'segundo batzuk',\n            ss: '%d segundo',\n            m: 'minutu bat',\n            mm: '%d minutu',\n            h: 'ordu bat',\n            hh: '%d ordu',\n            d: 'egun bat',\n            dd: '%d egun',\n            M: 'hilabete bat',\n            MM: '%d hilabete',\n            y: 'urte bat',\n            yy: '%d urte',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$6 = {\n            1: '۱',\n            2: '۲',\n            3: '۳',\n            4: '۴',\n            5: '۵',\n            6: '۶',\n            7: '۷',\n            8: '۸',\n            9: '۹',\n            0: '۰',\n        },\n        numberMap$5 = {\n            '۱': '1',\n            '۲': '2',\n            '۳': '3',\n            '۴': '4',\n            '۵': '5',\n            '۶': '6',\n            '۷': '7',\n            '۸': '8',\n            '۹': '9',\n            '۰': '0',\n        };\n\n    hooks.defineLocale('fa', {\n        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n            '_'\n        ),\n        monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n            '_'\n        ),\n        weekdays: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n            '_'\n        ),\n        weekdaysShort: 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n            '_'\n        ),\n        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar: {\n            sameDay: '[امروز ساعت] LT',\n            nextDay: '[فردا ساعت] LT',\n            nextWeek: 'dddd [ساعت] LT',\n            lastDay: '[دیروز ساعت] LT',\n            lastWeek: 'dddd [پیش] [ساعت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'در %s',\n            past: '%s پیش',\n            s: 'چند ثانیه',\n            ss: '%d ثانیه',\n            m: 'یک دقیقه',\n            mm: '%d دقیقه',\n            h: 'یک ساعت',\n            hh: '%d ساعت',\n            d: 'یک روز',\n            dd: '%d روز',\n            M: 'یک ماه',\n            MM: '%d ماه',\n            y: 'یک سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[۰-۹]/g, function (match) {\n                    return numberMap$5[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$6[match];\n                })\n                .replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal: '%dم',\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(\n            ' '\n        ),\n        numbersFuture = [\n            'nolla',\n            'yhden',\n            'kahden',\n            'kolmen',\n            'neljän',\n            'viiden',\n            'kuuden',\n            numbersPast[7],\n            numbersPast[8],\n            numbersPast[9],\n        ];\n    function translate$2(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                result = isFuture ? 'sekunnin' : 'sekuntia';\n                break;\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10\n            ? isFuture\n                ? numbersFuture[number]\n                : numbersPast[number]\n            : number;\n    }\n\n    hooks.defineLocale('fi', {\n        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(\n            '_'\n        ),\n        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(\n            '_'\n        ),\n        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(\n            '_'\n        ),\n        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM[ta] YYYY',\n            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l: 'D.M.YYYY',\n            ll: 'Do MMM YYYY',\n            lll: 'Do MMM YYYY, [klo] HH.mm',\n            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',\n        },\n        calendar: {\n            sameDay: '[tänään] [klo] LT',\n            nextDay: '[huomenna] [klo] LT',\n            nextWeek: 'dddd [klo] LT',\n            lastDay: '[eilen] [klo] LT',\n            lastWeek: '[viime] dddd[na] [klo] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s päästä',\n            past: '%s sitten',\n            s: translate$2,\n            ss: translate$2,\n            m: translate$2,\n            mm: translate$2,\n            h: translate$2,\n            hh: translate$2,\n            d: translate$2,\n            dd: translate$2,\n            M: translate$2,\n            MM: translate$2,\n            y: translate$2,\n            yy: translate$2,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fil', {\n        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(\n            '_'\n        ),\n        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'MM/D/YYYY',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY HH:mm',\n            LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'sa loob ng %s',\n            past: '%s ang nakalipas',\n            s: 'ilang segundo',\n            ss: '%d segundo',\n            m: 'isang minuto',\n            mm: '%d minuto',\n            h: 'isang oras',\n            hh: '%d oras',\n            d: 'isang araw',\n            dd: '%d araw',\n            M: 'isang buwan',\n            MM: '%d buwan',\n            y: 'isang taon',\n            yy: '%d taon',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fo', {\n        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(\n            '_'\n        ),\n        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D. MMMM, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Í dag kl.] LT',\n            nextDay: '[Í morgin kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[Í gjár kl.] LT',\n            lastWeek: '[síðstu] dddd [kl] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'um %s',\n            past: '%s síðani',\n            s: 'fá sekund',\n            ss: '%d sekundir',\n            m: 'ein minuttur',\n            mm: '%d minuttir',\n            h: 'ein tími',\n            hh: '%d tímar',\n            d: 'ein dagur',\n            dd: '%d dagar',\n            M: 'ein mánaður',\n            MM: '%d mánaðir',\n            y: 'eitt ár',\n            yy: '%d ár',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ca', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ch', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsStrictRegex$1 = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n        monthsShortStrictRegex$1 = /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?)/i,\n        monthsRegex$7 = /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n        monthsParse$6 = [\n            /^janv/i,\n            /^févr/i,\n            /^mars/i,\n            /^avr/i,\n            /^mai/i,\n            /^juin/i,\n            /^juil/i,\n            /^août/i,\n            /^sept/i,\n            /^oct/i,\n            /^nov/i,\n            /^déc/i,\n        ];\n\n    hooks.defineLocale('fr', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n            '_'\n        ),\n        monthsRegex: monthsRegex$7,\n        monthsShortRegex: monthsRegex$7,\n        monthsStrictRegex: monthsStrictRegex$1,\n        monthsShortStrictRegex: monthsShortStrictRegex$1,\n        monthsParse: monthsParse$6,\n        longMonthsParse: monthsParse$6,\n        shortMonthsParse: monthsParse$6,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            w: 'une semaine',\n            ww: '%d semaines',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(\n            '_'\n        ),\n        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(\n            '_'\n        );\n\n    hooks.defineLocale('fy', {\n        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact: true,\n        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(\n            '_'\n        ),\n        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'oer %s',\n            past: '%s lyn',\n            s: 'in pear sekonden',\n            ss: '%d sekonden',\n            m: 'ien minút',\n            mm: '%d minuten',\n            h: 'ien oere',\n            hh: '%d oeren',\n            d: 'ien dei',\n            dd: '%d dagen',\n            M: 'ien moanne',\n            MM: '%d moannen',\n            y: 'ien jier',\n            yy: '%d jierren',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$6 = [\n            'Eanáir',\n            'Feabhra',\n            'Márta',\n            'Aibreán',\n            'Bealtaine',\n            'Meitheamh',\n            'Iúil',\n            'Lúnasa',\n            'Meán Fómhair',\n            'Deireadh Fómhair',\n            'Samhain',\n            'Nollaig',\n        ],\n        monthsShort$5 = [\n            'Ean',\n            'Feabh',\n            'Márt',\n            'Aib',\n            'Beal',\n            'Meith',\n            'Iúil',\n            'Lún',\n            'M.F.',\n            'D.F.',\n            'Samh',\n            'Noll',\n        ],\n        weekdays$1 = [\n            'Dé Domhnaigh',\n            'Dé Luain',\n            'Dé Máirt',\n            'Dé Céadaoin',\n            'Déardaoin',\n            'Dé hAoine',\n            'Dé Sathairn',\n        ],\n        weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],\n        weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];\n\n    hooks.defineLocale('ga', {\n        months: months$6,\n        monthsShort: monthsShort$5,\n        monthsParseExact: true,\n        weekdays: weekdays$1,\n        weekdaysShort: weekdaysShort,\n        weekdaysMin: weekdaysMin,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Inniu ag] LT',\n            nextDay: '[Amárach ag] LT',\n            nextWeek: 'dddd [ag] LT',\n            lastDay: '[Inné ag] LT',\n            lastWeek: 'dddd [seo caite] [ag] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'i %s',\n            past: '%s ó shin',\n            s: 'cúpla soicind',\n            ss: '%d soicind',\n            m: 'nóiméad',\n            mm: '%d nóiméad',\n            h: 'uair an chloig',\n            hh: '%d uair an chloig',\n            d: 'lá',\n            dd: '%d lá',\n            M: 'mí',\n            MM: '%d míonna',\n            y: 'bliain',\n            yy: '%d bliain',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$7 = [\n            'Am Faoilleach',\n            'An Gearran',\n            'Am Màrt',\n            'An Giblean',\n            'An Cèitean',\n            'An t-Ògmhios',\n            'An t-Iuchar',\n            'An Lùnastal',\n            'An t-Sultain',\n            'An Dàmhair',\n            'An t-Samhain',\n            'An Dùbhlachd',\n        ],\n        monthsShort$6 = [\n            'Faoi',\n            'Gear',\n            'Màrt',\n            'Gibl',\n            'Cèit',\n            'Ògmh',\n            'Iuch',\n            'Lùn',\n            'Sult',\n            'Dàmh',\n            'Samh',\n            'Dùbh',\n        ],\n        weekdays$2 = [\n            'Didòmhnaich',\n            'Diluain',\n            'Dimàirt',\n            'Diciadain',\n            'Diardaoin',\n            'Dihaoine',\n            'Disathairne',\n        ],\n        weekdaysShort$1 = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],\n        weekdaysMin$1 = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    hooks.defineLocale('gd', {\n        months: months$7,\n        monthsShort: monthsShort$6,\n        monthsParseExact: true,\n        weekdays: weekdays$2,\n        weekdaysShort: weekdaysShort$1,\n        weekdaysMin: weekdaysMin$1,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[An-diugh aig] LT',\n            nextDay: '[A-màireach aig] LT',\n            nextWeek: 'dddd [aig] LT',\n            lastDay: '[An-dè aig] LT',\n            lastWeek: 'dddd [seo chaidh] [aig] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ann an %s',\n            past: 'bho chionn %s',\n            s: 'beagan diogan',\n            ss: '%d diogan',\n            m: 'mionaid',\n            mm: '%d mionaidean',\n            h: 'uair',\n            hh: '%d uairean',\n            d: 'latha',\n            dd: '%d latha',\n            M: 'mìos',\n            MM: '%d mìosan',\n            y: 'bliadhna',\n            yy: '%d bliadhna',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('gl', {\n        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(\n            '_'\n        ),\n        monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';\n            },\n            lastDay: function () {\n                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past: 'hai %s',\n            s: 'uns segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'unha hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$4(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],\n            ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],\n            m: ['एका मिणटान', 'एक मिनूट'],\n            mm: [number + ' मिणटांनी', number + ' मिणटां'],\n            h: ['एका वरान', 'एक वर'],\n            hh: [number + ' वरांनी', number + ' वरां'],\n            d: ['एका दिसान', 'एक दीस'],\n            dd: [number + ' दिसांनी', number + ' दीस'],\n            M: ['एका म्हयन्यान', 'एक म्हयनो'],\n            MM: [number + ' म्हयन्यानी', number + ' म्हयने'],\n            y: ['एका वर्सान', 'एक वर्स'],\n            yy: [number + ' वर्सांनी', number + ' वर्सां'],\n        };\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-deva', {\n        months: {\n            standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\n                '_'\n            ),\n            format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(\n                '_'\n            ),\n            isFormat: /MMMM(\\s)+D[oD]?/,\n        },\n        monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),\n        weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),\n        weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'A h:mm [वाजतां]',\n            LTS: 'A h:mm:ss [वाजतां]',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY A h:mm [वाजतां]',\n            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',\n            llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',\n        },\n        calendar: {\n            sameDay: '[आयज] LT',\n            nextDay: '[फाल्यां] LT',\n            nextWeek: '[फुडलो] dddd[,] LT',\n            lastDay: '[काल] LT',\n            lastWeek: '[फाटलो] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s',\n            past: '%s आदीं',\n            s: processRelativeTime$4,\n            ss: processRelativeTime$4,\n            m: processRelativeTime$4,\n            mm: processRelativeTime$4,\n            h: processRelativeTime$4,\n            hh: processRelativeTime$4,\n            d: processRelativeTime$4,\n            dd: processRelativeTime$4,\n            M: processRelativeTime$4,\n            MM: processRelativeTime$4,\n            y: processRelativeTime$4,\n            yy: processRelativeTime$4,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(वेर)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // the ordinal 'वेर' only applies to day of the month\n                case 'D':\n                    return number + 'वेर';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week\n            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n        },\n        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राती') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळीं') {\n                return hour;\n            } else if (meridiem === 'दनपारां') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'सांजे') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'राती';\n            } else if (hour < 12) {\n                return 'सकाळीं';\n            } else if (hour < 16) {\n                return 'दनपारां';\n            } else if (hour < 20) {\n                return 'सांजे';\n            } else {\n                return 'राती';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$5(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['thoddea sekondamni', 'thodde sekond'],\n            ss: [number + ' sekondamni', number + ' sekond'],\n            m: ['eka mintan', 'ek minut'],\n            mm: [number + ' mintamni', number + ' mintam'],\n            h: ['eka voran', 'ek vor'],\n            hh: [number + ' voramni', number + ' voram'],\n            d: ['eka disan', 'ek dis'],\n            dd: [number + ' disamni', number + ' dis'],\n            M: ['eka mhoinean', 'ek mhoino'],\n            MM: [number + ' mhoineamni', number + ' mhoine'],\n            y: ['eka vorsan', 'ek voros'],\n            yy: [number + ' vorsamni', number + ' vorsam'],\n        };\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-latn', {\n        months: {\n            standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(\n                '_'\n            ),\n            format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(\n                '_'\n            ),\n            isFormat: /MMMM(\\s)+D[oD]?/,\n        },\n        monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'A h:mm [vazta]',\n            LTS: 'A h:mm:ss [vazta]',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY A h:mm [vazta]',\n            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]',\n        },\n        calendar: {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Fuddlo] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fattlo] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s',\n            past: '%s adim',\n            s: processRelativeTime$5,\n            ss: processRelativeTime$5,\n            m: processRelativeTime$5,\n            mm: processRelativeTime$5,\n            h: processRelativeTime$5,\n            hh: processRelativeTime$5,\n            d: processRelativeTime$5,\n            dd: processRelativeTime$5,\n            M: processRelativeTime$5,\n            MM: processRelativeTime$5,\n            y: processRelativeTime$5,\n            yy: processRelativeTime$5,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week\n            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n        },\n        meridiemParse: /rati|sokallim|donparam|sanje/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokallim') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokallim';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$7 = {\n            1: '૧',\n            2: '૨',\n            3: '૩',\n            4: '૪',\n            5: '૫',\n            6: '૬',\n            7: '૭',\n            8: '૮',\n            9: '૯',\n            0: '૦',\n        },\n        numberMap$6 = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0',\n        };\n\n    hooks.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(\n            '_'\n        ),\n        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(\n            '_'\n        ),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પહેલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ',\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap$6[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$7[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('he', {\n        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(\n            '_'\n        ),\n        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(\n            '_'\n        ),\n        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [ב]MMMM YYYY',\n            LLL: 'D [ב]MMMM YYYY HH:mm',\n            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n            l: 'D/M/YYYY',\n            ll: 'D MMM YYYY',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd, D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[היום ב־]LT',\n            nextDay: '[מחר ב־]LT',\n            nextWeek: 'dddd [בשעה] LT',\n            lastDay: '[אתמול ב־]LT',\n            lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'בעוד %s',\n            past: 'לפני %s',\n            s: 'מספר שניות',\n            ss: '%d שניות',\n            m: 'דקה',\n            mm: '%d דקות',\n            h: 'שעה',\n            hh: function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d: 'יום',\n            dd: function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M: 'חודש',\n            MM: function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y: 'שנה',\n            yy: function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            },\n        },\n        meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM: function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$8 = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$7 = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        },\n        monthsParse$7 = [\n            /^जन/i,\n            /^फ़र|फर/i,\n            /^मार्च/i,\n            /^अप्रै/i,\n            /^मई/i,\n            /^जून/i,\n            /^जुल/i,\n            /^अग/i,\n            /^सितं|सित/i,\n            /^अक्टू/i,\n            /^नव|नवं/i,\n            /^दिसं|दिस/i,\n        ],\n        shortMonthsParse = [\n            /^जन/i,\n            /^फ़र/i,\n            /^मार्च/i,\n            /^अप्रै/i,\n            /^मई/i,\n            /^जून/i,\n            /^जुल/i,\n            /^अग/i,\n            /^सित/i,\n            /^अक्टू/i,\n            /^नव/i,\n            /^दिस/i,\n        ];\n\n    hooks.defineLocale('hi', {\n        months: {\n            format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(\n                '_'\n            ),\n            standalone: 'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(\n            '_'\n        ),\n        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm बजे',\n            LTS: 'A h:mm:ss बजे',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm बजे',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',\n        },\n\n        monthsParse: monthsParse$7,\n        longMonthsParse: monthsParse$7,\n        shortMonthsParse: shortMonthsParse,\n\n        monthsRegex: /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n\n        monthsShortRegex: /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n\n        monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,\n\n        monthsShortStrictRegex: /^(जन\\.?|फ़र\\.?|मार्च?|अप्रै\\.?|मई?|जून?|जुल\\.?|अग\\.?|सित\\.?|अक्टू\\.?|नव\\.?|दिस\\.?)/i,\n\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[कल] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[कल] LT',\n            lastWeek: '[पिछले] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s में',\n            past: '%s पहले',\n            s: 'कुछ ही क्षण',\n            ss: '%d सेकंड',\n            m: 'एक मिनट',\n            mm: '%d मिनट',\n            h: 'एक घंटा',\n            hh: '%d घंटे',\n            d: 'एक दिन',\n            dd: '%d दिन',\n            M: 'एक महीने',\n            MM: '%d महीने',\n            y: 'एक वर्ष',\n            yy: '%d वर्ष',\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$7[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$8[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate$3(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('hr', {\n        months: {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(\n                '_'\n            ),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM YYYY',\n            LLL: 'Do MMMM YYYY H:mm',\n            LLLL: 'dddd, Do MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prošlu] [nedjelju] [u] LT';\n                    case 3:\n                        return '[prošlu] [srijedu] [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate$3,\n            m: translate$3,\n            mm: translate$3,\n            h: translate$3,\n            hh: translate$3,\n            d: 'dan',\n            dd: translate$3,\n            M: 'mjesec',\n            MM: translate$3,\n            y: 'godinu',\n            yy: translate$3,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(\n        ' '\n    );\n    function translate$4(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return isFuture || withoutSuffix\n                    ? 'néhány másodperc'\n                    : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix)\n                    ? ' másodperc'\n                    : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (\n            (isFuture ? '' : '[múlt] ') +\n            '[' +\n            weekEndings[this.day()] +\n            '] LT[-kor]'\n        );\n    }\n\n    hooks.defineLocale('hu', {\n        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY. MMMM D.',\n            LLL: 'YYYY. MMMM D. H:mm',\n            LLLL: 'YYYY. MMMM D., dddd H:mm',\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar: {\n            sameDay: '[ma] LT[-kor]',\n            nextDay: '[holnap] LT[-kor]',\n            nextWeek: function () {\n                return week.call(this, true);\n            },\n            lastDay: '[tegnap] LT[-kor]',\n            lastWeek: function () {\n                return week.call(this, false);\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s múlva',\n            past: '%s',\n            s: translate$4,\n            ss: translate$4,\n            m: translate$4,\n            mm: translate$4,\n            h: translate$4,\n            hh: translate$4,\n            d: translate$4,\n            dd: translate$4,\n            M: translate$4,\n            MM: translate$4,\n            y: translate$4,\n            yy: translate$4,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('hy-am', {\n        months: {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(\n                '_'\n            ),\n            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(\n            '_'\n        ),\n        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY թ.',\n            LLL: 'D MMMM YYYY թ., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY թ., HH:mm',\n        },\n        calendar: {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s հետո',\n            past: '%s առաջ',\n            s: 'մի քանի վայրկյան',\n            ss: '%d վայրկյան',\n            m: 'րոպե',\n            mm: '%d րոպե',\n            h: 'ժամ',\n            hh: '%d ժամ',\n            d: 'օր',\n            dd: '%d օր',\n            M: 'ամիս',\n            MM: '%d ամիս',\n            y: 'տարի',\n            yy: '%d տարի',\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem: function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('id', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Besok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kemarin pukul] LT',\n            lastWeek: 'dddd [lalu pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lalu',\n            s: 'beberapa detik',\n            ss: '%d detik',\n            m: 'semenit',\n            mm: '%d menit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$2(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate$5(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture\n                    ? 'nokkrar sekúndur'\n                    : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural$2(number)) {\n                    return (\n                        result +\n                        (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum')\n                    );\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural$2(number)) {\n                    return (\n                        result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')\n                    );\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural$2(number)) {\n                    return (\n                        result +\n                        (withoutSuffix || isFuture\n                            ? 'klukkustundir'\n                            : 'klukkustundum')\n                    );\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    hooks.defineLocale('is', {\n        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(\n            '_'\n        ),\n        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] H:mm',\n            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',\n        },\n        calendar: {\n            sameDay: '[í dag kl.] LT',\n            nextDay: '[á morgun kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[í gær kl.] LT',\n            lastWeek: '[síðasta] dddd [kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'eftir %s',\n            past: 'fyrir %s síðan',\n            s: translate$5,\n            ss: translate$5,\n            m: translate$5,\n            mm: translate$5,\n            h: 'klukkustund',\n            hh: translate$5,\n            d: translate$5,\n            dd: translate$5,\n            M: translate$5,\n            MM: translate$5,\n            y: translate$5,\n            yy: translate$5,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it-ch', {\n        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n            '_'\n        ),\n        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (s) {\n                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past: '%s fa',\n            s: 'alcuni secondi',\n            ss: '%d secondi',\n            m: 'un minuto',\n            mm: '%d minuti',\n            h: \"un'ora\",\n            hh: '%d ore',\n            d: 'un giorno',\n            dd: '%d giorni',\n            M: 'un mese',\n            MM: '%d mesi',\n            y: 'un anno',\n            yy: '%d anni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it', {\n        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n            '_'\n        ),\n        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return (\n                    '[Oggi a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            nextDay: function () {\n                return (\n                    '[Domani a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            nextWeek: function () {\n                return (\n                    'dddd [a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            lastDay: function () {\n                return (\n                    '[Ieri a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return (\n                            '[La scorsa] dddd [a' +\n                            (this.hours() > 1\n                                ? 'lle '\n                                : this.hours() === 0\n                                ? ' '\n                                : \"ll'\") +\n                            ']LT'\n                        );\n                    default:\n                        return (\n                            '[Lo scorso] dddd [a' +\n                            (this.hours() > 1\n                                ? 'lle '\n                                : this.hours() === 0\n                                ? ' '\n                                : \"ll'\") +\n                            ']LT'\n                        );\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'tra %s',\n            past: '%s fa',\n            s: 'alcuni secondi',\n            ss: '%d secondi',\n            m: 'un minuto',\n            mm: '%d minuti',\n            h: \"un'ora\",\n            hh: '%d ore',\n            d: 'un giorno',\n            dd: '%d giorni',\n            w: 'una settimana',\n            ww: '%d settimane',\n            M: 'un mese',\n            MM: '%d mesi',\n            y: 'un anno',\n            yy: '%d anni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ja', {\n        eras: [\n            {\n                since: '2019-05-01',\n                offset: 1,\n                name: '令和',\n                narrow: '㋿',\n                abbr: 'R',\n            },\n            {\n                since: '1989-01-08',\n                until: '2019-04-30',\n                offset: 1,\n                name: '平成',\n                narrow: '㍻',\n                abbr: 'H',\n            },\n            {\n                since: '1926-12-25',\n                until: '1989-01-07',\n                offset: 1,\n                name: '昭和',\n                narrow: '㍼',\n                abbr: 'S',\n            },\n            {\n                since: '1912-07-30',\n                until: '1926-12-24',\n                offset: 1,\n                name: '大正',\n                narrow: '㍽',\n                abbr: 'T',\n            },\n            {\n                since: '1873-01-01',\n                until: '1912-07-29',\n                offset: 6,\n                name: '明治',\n                narrow: '㍾',\n                abbr: 'M',\n            },\n            {\n                since: '0001-01-01',\n                until: '1873-12-31',\n                offset: 1,\n                name: '西暦',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: '紀元前',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        eraYearOrdinalRegex: /(元|\\d+)年/,\n        eraYearOrdinalParse: function (input, match) {\n            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);\n        },\n        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日 dddd HH:mm',\n            l: 'YYYY/MM/DD',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日(ddd) HH:mm',\n        },\n        meridiemParse: /午前|午後/i,\n        isPM: function (input) {\n            return input === '午後';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar: {\n            sameDay: '[今日] LT',\n            nextDay: '[明日] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay: '[昨日] LT',\n            lastWeek: function (now) {\n                if (this.week() !== now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}日/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'y':\n                    return number === 1 ? '元年' : number + '年';\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '数秒',\n            ss: '%d秒',\n            m: '1分',\n            mm: '%d分',\n            h: '1時間',\n            hh: '%d時間',\n            d: '1日',\n            dd: '%d日',\n            M: '1ヶ月',\n            MM: '%dヶ月',\n            y: '1年',\n            yy: '%d年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('jv', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar: {\n            sameDay: '[Dinten puniko pukul] LT',\n            nextDay: '[Mbenjang pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kala wingi pukul] LT',\n            lastWeek: 'dddd [kepengker pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'wonten ing %s',\n            past: '%s ingkang kepengker',\n            s: 'sawetawis detik',\n            ss: '%d detik',\n            m: 'setunggal menit',\n            mm: '%d menit',\n            h: 'setunggal jam',\n            hh: '%d jam',\n            d: 'sedinten',\n            dd: '%d dinten',\n            M: 'sewulan',\n            MM: '%d wulan',\n            y: 'setaun',\n            yy: '%d taun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ka', {\n        months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(\n            '_'\n        ),\n        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays: {\n            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(\n                '_'\n            ),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(\n                '_'\n            ),\n            isFormat: /(წინა|შემდეგ)/,\n        },\n        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[დღეს] LT[-ზე]',\n            nextDay: '[ხვალ] LT[-ზე]',\n            lastDay: '[გუშინ] LT[-ზე]',\n            nextWeek: '[შემდეგ] dddd LT[-ზე]',\n            lastWeek: '[წინა] dddd LT-ზე',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (s) {\n                return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (\n                    $0,\n                    $1,\n                    $2\n                ) {\n                    return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';\n                });\n            },\n            past: function (s) {\n                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if (/წელი/.test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n                return s;\n            },\n            s: 'რამდენიმე წამი',\n            ss: '%d წამი',\n            m: 'წუთი',\n            mm: '%d წუთი',\n            h: 'საათი',\n            hh: '%d საათი',\n            d: 'დღე',\n            dd: '%d დღე',\n            M: 'თვე',\n            MM: '%d თვე',\n            y: 'წელი',\n            yy: '%d წელი',\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal: function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if (\n                number < 20 ||\n                (number <= 100 && number % 20 === 0) ||\n                number % 100 === 0\n            ) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week: {\n            dow: 1,\n            doy: 7,\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$1 = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші',\n    };\n\n    hooks.defineLocale('kk', {\n        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(\n            '_'\n        ),\n        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(\n            '_'\n        ),\n        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бүгін сағат] LT',\n            nextDay: '[Ертең сағат] LT',\n            nextWeek: 'dddd [сағат] LT',\n            lastDay: '[Кеше сағат] LT',\n            lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ішінде',\n            past: '%s бұрын',\n            s: 'бірнеше секунд',\n            ss: '%d секунд',\n            m: 'бір минут',\n            mm: '%d минут',\n            h: 'бір сағат',\n            hh: '%d сағат',\n            d: 'бір күн',\n            dd: '%d күн',\n            M: 'бір ай',\n            MM: '%d ай',\n            y: 'бір жыл',\n            yy: '%d жыл',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$1[number] || suffixes$1[a] || suffixes$1[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$9 = {\n            1: '១',\n            2: '២',\n            3: '៣',\n            4: '៤',\n            5: '៥',\n            6: '៦',\n            7: '៧',\n            8: '៨',\n            9: '៩',\n            0: '០',\n        },\n        numberMap$8 = {\n            '១': '1',\n            '២': '2',\n            '៣': '3',\n            '៤': '4',\n            '៥': '5',\n            '៦': '6',\n            '៧': '7',\n            '៨': '8',\n            '៩': '9',\n            '០': '0',\n        };\n\n    hooks.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ',\n        },\n        dayOfMonthOrdinalParse: /ទី\\d{1,2}/,\n        ordinal: 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap$8[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$9[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$a = {\n            1: '೧',\n            2: '೨',\n            3: '೩',\n            4: '೪',\n            5: '೫',\n            6: '೬',\n            7: '೭',\n            8: '೮',\n            9: '೯',\n            0: '೦',\n        },\n        numberMap$9 = {\n            '೧': '1',\n            '೨': '2',\n            '೩': '3',\n            '೪': '4',\n            '೫': '5',\n            '೬': '6',\n            '೭': '7',\n            '೮': '8',\n            '೯': '9',\n            '೦': '0',\n        };\n\n    hooks.defineLocale('kn', {\n        months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(\n            '_'\n        ),\n        monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(\n            '_'\n        ),\n        weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[ಇಂದು] LT',\n            nextDay: '[ನಾಳೆ] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ನಿನ್ನೆ] LT',\n            lastWeek: '[ಕೊನೆಯ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ನಂತರ',\n            past: '%s ಹಿಂದೆ',\n            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss: '%d ಸೆಕೆಂಡುಗಳು',\n            m: 'ಒಂದು ನಿಮಿಷ',\n            mm: '%d ನಿಮಿಷ',\n            h: 'ಒಂದು ಗಂಟೆ',\n            hh: '%d ಗಂಟೆ',\n            d: 'ಒಂದು ದಿನ',\n            dd: '%d ದಿನ',\n            M: 'ಒಂದು ತಿಂಗಳು',\n            MM: '%d ತಿಂಗಳು',\n            y: 'ಒಂದು ವರ್ಷ',\n            yy: '%d ವರ್ಷ',\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap$9[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$a[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal: function (number) {\n            return number + 'ನೇ';\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ko', {\n        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(\n            '_'\n        ),\n        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY년 MMMM D일',\n            LLL: 'YYYY년 MMMM D일 A h:mm',\n            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n            l: 'YYYY.MM.DD.',\n            ll: 'YYYY년 MMMM D일',\n            lll: 'YYYY년 MMMM D일 A h:mm',\n            llll: 'YYYY년 MMMM D일 dddd A h:mm',\n        },\n        calendar: {\n            sameDay: '오늘 LT',\n            nextDay: '내일 LT',\n            nextWeek: 'dddd LT',\n            lastDay: '어제 LT',\n            lastWeek: '지난주 dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s 후',\n            past: '%s 전',\n            s: '몇 초',\n            ss: '%d초',\n            m: '1분',\n            mm: '%d분',\n            h: '한 시간',\n            hh: '%d시간',\n            d: '하루',\n            dd: '%d일',\n            M: '한 달',\n            MM: '%d달',\n            y: '일 년',\n            yy: '%d년',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse: /오전|오후/,\n        isPM: function (token) {\n            return token === '오후';\n        },\n        meridiem: function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$b = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$a = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        },\n        months$8 = [\n            'کانونی دووەم',\n            'شوبات',\n            'ئازار',\n            'نیسان',\n            'ئایار',\n            'حوزەیران',\n            'تەمموز',\n            'ئاب',\n            'ئەیلوول',\n            'تشرینی یەكەم',\n            'تشرینی دووەم',\n            'كانونی یەکەم',\n        ];\n\n    hooks.defineLocale('ku', {\n        months: months$8,\n        monthsShort: months$8,\n        weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(\n            '_'\n        ),\n        weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(\n            '_'\n        ),\n        weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ئێواره‌|به‌یانی/,\n        isPM: function (input) {\n            return /ئێواره‌/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'به‌یانی';\n            } else {\n                return 'ئێواره‌';\n            }\n        },\n        calendar: {\n            sameDay: '[ئه‌مرۆ كاتژمێر] LT',\n            nextDay: '[به‌یانی كاتژمێر] LT',\n            nextWeek: 'dddd [كاتژمێر] LT',\n            lastDay: '[دوێنێ كاتژمێر] LT',\n            lastWeek: 'dddd [كاتژمێر] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'له‌ %s',\n            past: '%s',\n            s: 'چه‌ند چركه‌یه‌ك',\n            ss: 'چركه‌ %d',\n            m: 'یه‌ك خوله‌ك',\n            mm: '%d خوله‌ك',\n            h: 'یه‌ك كاتژمێر',\n            hh: '%d كاتژمێر',\n            d: 'یه‌ك ڕۆژ',\n            dd: '%d ڕۆژ',\n            M: 'یه‌ك مانگ',\n            MM: '%d مانگ',\n            y: 'یه‌ك ساڵ',\n            yy: '%d ساڵ',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$a[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$b[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$2 = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү',\n    };\n\n    hooks.defineLocale('ky', {\n        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n            '_'\n        ),\n        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(\n            '_'\n        ),\n        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(\n            '_'\n        ),\n        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бүгүн саат] LT',\n            nextDay: '[Эртең саат] LT',\n            nextWeek: 'dddd [саат] LT',\n            lastDay: '[Кечээ саат] LT',\n            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ичинде',\n            past: '%s мурун',\n            s: 'бирнече секунд',\n            ss: '%d секунд',\n            m: 'бир мүнөт',\n            mm: '%d мүнөт',\n            h: 'бир саат',\n            hh: '%d саат',\n            d: 'бир күн',\n            dd: '%d күн',\n            M: 'бир ай',\n            MM: '%d ай',\n            y: 'бир жыл',\n            yy: '%d жыл',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$2[number] || suffixes$2[a] || suffixes$2[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$6(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eng Minutt', 'enger Minutt'],\n            h: ['eng Stonn', 'enger Stonn'],\n            d: ['een Dag', 'engem Dag'],\n            M: ['ee Mount', 'engem Mount'],\n            y: ['ee Joer', 'engem Joer'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10,\n                firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    hooks.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(\n            '_'\n        ),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            },\n        },\n        relativeTime: {\n            future: processFutureTime,\n            past: processPastTime,\n            s: 'e puer Sekonnen',\n            ss: '%d Sekonnen',\n            m: processRelativeTime$6,\n            mm: '%d Minutten',\n            h: processRelativeTime$6,\n            hh: '%d Stonnen',\n            d: processRelativeTime$6,\n            dd: '%d Deeg',\n            M: processRelativeTime$6,\n            MM: '%d Méint',\n            y: processRelativeTime$6,\n            yy: '%d Joer',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('lo', {\n        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(\n            '_'\n        ),\n        monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(\n            '_'\n        ),\n        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'ວັນdddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar: {\n            sameDay: '[ມື້ນີ້ເວລາ] LT',\n            nextDay: '[ມື້ອື່ນເວລາ] LT',\n            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay: '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ອີກ %s',\n            past: '%sຜ່ານມາ',\n            s: 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss: '%d ວິນາທີ',\n            m: '1 ນາທີ',\n            mm: '%d ນາທີ',\n            h: '1 ຊົ່ວໂມງ',\n            hh: '%d ຊົ່ວໂມງ',\n            d: '1 ມື້',\n            dd: '%d ມື້',\n            M: '1 ເດືອນ',\n            MM: '%d ເດືອນ',\n            y: '1 ປີ',\n            yy: '%d ປີ',\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal: function (number) {\n            return 'ທີ່' + number;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var units = {\n        ss: 'sekundė_sekundžių_sekundes',\n        m: 'minutė_minutės_minutę',\n        mm: 'minutės_minučių_minutes',\n        h: 'valanda_valandos_valandą',\n        hh: 'valandos_valandų_valandas',\n        d: 'diena_dienos_dieną',\n        dd: 'dienos_dienų_dienas',\n        M: 'mėnuo_mėnesio_mėnesį',\n        MM: 'mėnesiai_mėnesių_mėnesius',\n        y: 'metai_metų_metus',\n        yy: 'metai_metų_metus',\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix\n            ? forms(key)[0]\n            : isFuture\n            ? forms(key)[1]\n            : forms(key)[2];\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate$6(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return (\n                result + translateSingular(number, withoutSuffix, key[0], isFuture)\n            );\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    hooks.defineLocale('lt', {\n        months: {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(\n                '_'\n            ),\n            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/,\n        },\n        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays: {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(\n                '_'\n            ),\n            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(\n                '_'\n            ),\n            isFormat: /dddd HH:mm/,\n        },\n        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY [m.] MMMM D [d.]',\n            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l: 'YYYY-MM-DD',\n            ll: 'YYYY [m.] MMMM D [d.]',\n            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',\n        },\n        calendar: {\n            sameDay: '[Šiandien] LT',\n            nextDay: '[Rytoj] LT',\n            nextWeek: 'dddd LT',\n            lastDay: '[Vakar] LT',\n            lastWeek: '[Praėjusį] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'po %s',\n            past: 'prieš %s',\n            s: translateSeconds,\n            ss: translate$6,\n            m: translateSingular,\n            mm: translate$6,\n            h: translateSingular,\n            hh: translate$6,\n            d: translateSingular,\n            dd: translate$6,\n            M: translateSingular,\n            MM: translate$6,\n            y: translateSingular,\n            yy: translate$6,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal: function (number) {\n            return number + '-oji';\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var units$1 = {\n        ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        h: 'stundas_stundām_stunda_stundas'.split('_'),\n        hh: 'stundas_stundām_stunda_stundas'.split('_'),\n        d: 'dienas_dienām_diena_dienas'.split('_'),\n        dd: 'dienas_dienām_diena_dienas'.split('_'),\n        M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        y: 'gada_gadiem_gads_gadi'.split('_'),\n        yy: 'gada_gadiem_gads_gadi'.split('_'),\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format$1(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural$1(number, withoutSuffix, key) {\n        return number + ' ' + format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    hooks.defineLocale('lv', {\n        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY.',\n            LL: 'YYYY. [gada] D. MMMM',\n            LLL: 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',\n        },\n        calendar: {\n            sameDay: '[Šodien pulksten] LT',\n            nextDay: '[Rīt pulksten] LT',\n            nextWeek: 'dddd [pulksten] LT',\n            lastDay: '[Vakar pulksten] LT',\n            lastWeek: '[Pagājušā] dddd [pulksten] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'pēc %s',\n            past: 'pirms %s',\n            s: relativeSeconds,\n            ss: relativeTimeWithPlural$1,\n            m: relativeTimeWithSingular,\n            mm: relativeTimeWithPlural$1,\n            h: relativeTimeWithSingular,\n            hh: relativeTimeWithPlural$1,\n            d: relativeTimeWithSingular,\n            dd: relativeTimeWithPlural$1,\n            M: relativeTimeWithSingular,\n            MM: relativeTimeWithPlural$1,\n            y: relativeTimeWithSingular,\n            yy: relativeTimeWithPlural$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator = {\n        words: {\n            //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1\n                ? wordKey[0]\n                : number >= 2 && number <= 4\n                ? wordKey[1]\n                : wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return (\n                    number +\n                    ' ' +\n                    translator.correctGrammaticalCase(number, wordKey)\n                );\n            }\n        },\n    };\n\n    hooks.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[juče u] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'nekoliko sekundi',\n            ss: translator.translate,\n            m: translator.translate,\n            mm: translator.translate,\n            h: translator.translate,\n            hh: translator.translate,\n            d: 'dan',\n            dd: translator.translate,\n            M: 'mjesec',\n            MM: translator.translate,\n            y: 'godinu',\n            yy: translator.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(\n            '_'\n        ),\n        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(\n            '_'\n        ),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mk', {\n        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(\n            '_'\n        ),\n        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(\n            '_'\n        ),\n        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Денес во] LT',\n            nextDay: '[Утре во] LT',\n            nextWeek: '[Во] dddd [во] LT',\n            lastDay: '[Вчера во] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: 'пред %s',\n            s: 'неколку секунди',\n            ss: '%d секунди',\n            m: 'една минута',\n            mm: '%d минути',\n            h: 'еден час',\n            hh: '%d часа',\n            d: 'еден ден',\n            dd: '%d дена',\n            M: 'еден месец',\n            MM: '%d месеци',\n            y: 'една година',\n            yy: '%d години',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal: function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ml', {\n        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(\n            '_'\n        ),\n        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(\n            '_'\n        ),\n        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm -നു',\n            LTS: 'A h:mm:ss -നു',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm -നു',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',\n        },\n        calendar: {\n            sameDay: '[ഇന്ന്] LT',\n            nextDay: '[നാളെ] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ഇന്നലെ] LT',\n            lastWeek: '[കഴിഞ്ഞ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s കഴിഞ്ഞ്',\n            past: '%s മുൻപ്',\n            s: 'അൽപ നിമിഷങ്ങൾ',\n            ss: '%d സെക്കൻഡ്',\n            m: 'ഒരു മിനിറ്റ്',\n            mm: '%d മിനിറ്റ്',\n            h: 'ഒരു മണിക്കൂർ',\n            hh: '%d മണിക്കൂർ',\n            d: 'ഒരു ദിവസം',\n            dd: '%d ദിവസം',\n            M: 'ഒരു മാസം',\n            MM: '%d മാസം',\n            y: 'ഒരു വർഷം',\n            yy: '%d വർഷം',\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'രാത്രി' && hour >= 4) ||\n                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                meridiem === 'വൈകുന്നേരം'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate$7(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    hooks.defineLocale('mn', {\n        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(\n            '_'\n        ),\n        monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY оны MMMMын D',\n            LLL: 'YYYY оны MMMMын D HH:mm',\n            LLLL: 'dddd, YYYY оны MMMMын D HH:mm',\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM: function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar: {\n            sameDay: '[Өнөөдөр] LT',\n            nextDay: '[Маргааш] LT',\n            nextWeek: '[Ирэх] dddd LT',\n            lastDay: '[Өчигдөр] LT',\n            lastWeek: '[Өнгөрсөн] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s дараа',\n            past: '%s өмнө',\n            s: translate$7,\n            ss: translate$7,\n            m: translate$7,\n            mm: translate$7,\n            h: translate$7,\n            hh: translate$7,\n            d: translate$7,\n            dd: translate$7,\n            M: translate$7,\n            MM: translate$7,\n            y: translate$7,\n            yy: translate$7,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$c = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$b = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture) {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's':\n                    output = 'काही सेकंद';\n                    break;\n                case 'ss':\n                    output = '%d सेकंद';\n                    break;\n                case 'm':\n                    output = 'एक मिनिट';\n                    break;\n                case 'mm':\n                    output = '%d मिनिटे';\n                    break;\n                case 'h':\n                    output = 'एक तास';\n                    break;\n                case 'hh':\n                    output = '%d तास';\n                    break;\n                case 'd':\n                    output = 'एक दिवस';\n                    break;\n                case 'dd':\n                    output = '%d दिवस';\n                    break;\n                case 'M':\n                    output = 'एक महिना';\n                    break;\n                case 'MM':\n                    output = '%d महिने';\n                    break;\n                case 'y':\n                    output = 'एक वर्ष';\n                    break;\n                case 'yy':\n                    output = '%d वर्षे';\n                    break;\n            }\n        } else {\n            switch (string) {\n                case 's':\n                    output = 'काही सेकंदां';\n                    break;\n                case 'ss':\n                    output = '%d सेकंदां';\n                    break;\n                case 'm':\n                    output = 'एका मिनिटा';\n                    break;\n                case 'mm':\n                    output = '%d मिनिटां';\n                    break;\n                case 'h':\n                    output = 'एका तासा';\n                    break;\n                case 'hh':\n                    output = '%d तासां';\n                    break;\n                case 'd':\n                    output = 'एका दिवसा';\n                    break;\n                case 'dd':\n                    output = '%d दिवसां';\n                    break;\n                case 'M':\n                    output = 'एका महिन्या';\n                    break;\n                case 'MM':\n                    output = '%d महिन्यां';\n                    break;\n                case 'y':\n                    output = 'एका वर्षा';\n                    break;\n                case 'yy':\n                    output = '%d वर्षां';\n                    break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    hooks.defineLocale('mr', {\n        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\n            '_'\n        ),\n        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm वाजता',\n            LTS: 'A h:mm:ss वाजता',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm वाजता',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',\n        },\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[उद्या] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr,\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$b[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$c[match];\n            });\n        },\n        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {\n                return hour;\n            } else if (\n                meridiem === 'दुपारी' ||\n                meridiem === 'सायंकाळी' ||\n                meridiem === 'रात्री'\n            ) {\n                return hour >= 12 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour >= 0 && hour < 6) {\n                return 'पहाटे';\n            } else if (hour < 12) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms-my', {\n        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Esok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kelmarin pukul] LT',\n            lastWeek: 'dddd [lepas pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lepas',\n            s: 'beberapa saat',\n            ss: '%d saat',\n            m: 'seminit',\n            mm: '%d minit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms', {\n        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Esok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kelmarin pukul] LT',\n            lastWeek: 'dddd [lepas pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lepas',\n            s: 'beberapa saat',\n            ss: '%d saat',\n            m: 'seminit',\n            mm: '%d minit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mt', {\n        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(\n            '_'\n        ),\n        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Illum fil-]LT',\n            nextDay: '[Għada fil-]LT',\n            nextWeek: 'dddd [fil-]LT',\n            lastDay: '[Il-bieraħ fil-]LT',\n            lastWeek: 'dddd [li għadda] [fil-]LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'f’ %s',\n            past: '%s ilu',\n            s: 'ftit sekondi',\n            ss: '%d sekondi',\n            m: 'minuta',\n            mm: '%d minuti',\n            h: 'siegħa',\n            hh: '%d siegħat',\n            d: 'ġurnata',\n            dd: '%d ġranet',\n            M: 'xahar',\n            MM: '%d xhur',\n            y: 'sena',\n            yy: '%d sni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$d = {\n            1: '၁',\n            2: '၂',\n            3: '၃',\n            4: '၄',\n            5: '၅',\n            6: '၆',\n            7: '၇',\n            8: '၈',\n            9: '၉',\n            0: '၀',\n        },\n        numberMap$c = {\n            '၁': '1',\n            '၂': '2',\n            '၃': '3',\n            '၄': '4',\n            '၅': '5',\n            '၆': '6',\n            '၇': '7',\n            '၈': '8',\n            '၉': '9',\n            '၀': '0',\n        };\n\n    hooks.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(\n            '_'\n        ),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(\n            '_'\n        ),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss: '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်',\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap$c[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$d[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nb', {\n        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s siden',\n            s: 'noen sekunder',\n            ss: '%d sekunder',\n            m: 'ett minutt',\n            mm: '%d minutter',\n            h: 'en time',\n            hh: '%d timer',\n            d: 'en dag',\n            dd: '%d dager',\n            w: 'en uke',\n            ww: '%d uker',\n            M: 'en måned',\n            MM: '%d måneder',\n            y: 'ett år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$e = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$d = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        };\n\n    hooks.defineLocale('ne', {\n        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(\n            '_'\n        ),\n        monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(\n            '_'\n        ),\n        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'Aको h:mm बजे',\n            LTS: 'Aको h:mm:ss बजे',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$d[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$e[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[भोलि] LT',\n            nextWeek: '[आउँदो] dddd[,] LT',\n            lastDay: '[हिजो] LT',\n            lastWeek: '[गएको] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sमा',\n            past: '%s अगाडि',\n            s: 'केही क्षण',\n            ss: '%d सेकेण्ड',\n            m: 'एक मिनेट',\n            mm: '%d मिनेट',\n            h: 'एक घण्टा',\n            hh: '%d घण्टा',\n            d: 'एक दिन',\n            dd: '%d दिन',\n            M: 'एक महिना',\n            MM: '%d महिना',\n            y: 'एक बर्ष',\n            yy: '%d बर्ष',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(\n            '_'\n        ),\n        monthsParse$8 = [\n            /^jan/i,\n            /^feb/i,\n            /^maart|mrt.?$/i,\n            /^apr/i,\n            /^mei$/i,\n            /^jun[i.]?$/i,\n            /^jul[i.]?$/i,\n            /^aug/i,\n            /^sep/i,\n            /^okt/i,\n            /^nov/i,\n            /^dec/i,\n        ],\n        monthsRegex$8 = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl-be', {\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$1[m.month()];\n            } else {\n                return monthsShortWithDots$1[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$8,\n        monthsShortRegex: monthsRegex$8,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse: monthsParse$8,\n        longMonthsParse: monthsParse$8,\n        shortMonthsParse: monthsParse$8,\n\n        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(\n            '_'\n        ),\n        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'over %s',\n            past: '%s geleden',\n            s: 'een paar seconden',\n            ss: '%d seconden',\n            m: 'één minuut',\n            mm: '%d minuten',\n            h: 'één uur',\n            hh: '%d uur',\n            d: 'één dag',\n            dd: '%d dagen',\n            M: 'één maand',\n            MM: '%d maanden',\n            y: 'één jaar',\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$2 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsShortWithoutDots$2 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(\n            '_'\n        ),\n        monthsParse$9 = [\n            /^jan/i,\n            /^feb/i,\n            /^maart|mrt.?$/i,\n            /^apr/i,\n            /^mei$/i,\n            /^jun[i.]?$/i,\n            /^jul[i.]?$/i,\n            /^aug/i,\n            /^sep/i,\n            /^okt/i,\n            /^nov/i,\n            /^dec/i,\n        ],\n        monthsRegex$9 = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl', {\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$2[m.month()];\n            } else {\n                return monthsShortWithDots$2[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$9,\n        monthsShortRegex: monthsRegex$9,\n        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse: monthsParse$9,\n        longMonthsParse: monthsParse$9,\n        shortMonthsParse: monthsParse$9,\n\n        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(\n            '_'\n        ),\n        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'over %s',\n            past: '%s geleden',\n            s: 'een paar seconden',\n            ss: '%d seconden',\n            m: 'één minuut',\n            mm: '%d minuten',\n            h: 'één uur',\n            hh: '%d uur',\n            d: 'één dag',\n            dd: '%d dagen',\n            w: 'één week',\n            ww: '%d weken',\n            M: 'één maand',\n            MM: '%d maanden',\n            y: 'één jaar',\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nn', {\n        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),\n        weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] H:mm',\n            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s sidan',\n            s: 'nokre sekund',\n            ss: '%d sekund',\n            m: 'eit minutt',\n            mm: '%d minutt',\n            h: 'ein time',\n            hh: '%d timar',\n            d: 'ein dag',\n            dd: '%d dagar',\n            w: 'ei veke',\n            ww: '%d veker',\n            M: 'ein månad',\n            MM: '%d månader',\n            y: 'eit år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('oc-lnc', {\n        months: {\n            standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(\n                '_'\n            ),\n            format: \"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre\".split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\s)+MMMM/,\n        },\n        monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(\n            '_'\n        ),\n        weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [de] YYYY',\n            ll: 'D MMM YYYY',\n            LLL: 'D MMMM [de] YYYY [a] H:mm',\n            lll: 'D MMM YYYY, H:mm',\n            LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',\n            llll: 'ddd D MMM YYYY, H:mm',\n        },\n        calendar: {\n            sameDay: '[uèi a] LT',\n            nextDay: '[deman a] LT',\n            nextWeek: 'dddd [a] LT',\n            lastDay: '[ièr a] LT',\n            lastWeek: 'dddd [passat a] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: \"d'aquí %s\",\n            past: 'fa %s',\n            s: 'unas segondas',\n            ss: '%d segondas',\n            m: 'una minuta',\n            mm: '%d minutas',\n            h: 'una ora',\n            hh: '%d oras',\n            d: 'un jorn',\n            dd: '%d jorns',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal: function (number, period) {\n            var output =\n                number === 1\n                    ? 'r'\n                    : number === 2\n                    ? 'n'\n                    : number === 3\n                    ? 'r'\n                    : number === 4\n                    ? 't'\n                    : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4,\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$f = {\n            1: '੧',\n            2: '੨',\n            3: '੩',\n            4: '੪',\n            5: '੫',\n            6: '੬',\n            7: '੭',\n            8: '੮',\n            9: '੯',\n            0: '੦',\n        },\n        numberMap$e = {\n            '੧': '1',\n            '੨': '2',\n            '੩': '3',\n            '੪': '4',\n            '੫': '5',\n            '੬': '6',\n            '੭': '7',\n            '੮': '8',\n            '੯': '9',\n            '੦': '0',\n        };\n\n    hooks.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(\n            '_'\n        ),\n        monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(\n            '_'\n        ),\n        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(\n            '_'\n        ),\n        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm ਵਜੇ',\n            LTS: 'A h:mm:ss ਵਜੇ',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',\n        },\n        calendar: {\n            sameDay: '[ਅਜ] LT',\n            nextDay: '[ਕਲ] LT',\n            nextWeek: '[ਅਗਲਾ] dddd, LT',\n            lastDay: '[ਕਲ] LT',\n            lastWeek: '[ਪਿਛਲੇ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ਵਿੱਚ',\n            past: '%s ਪਿਛਲੇ',\n            s: 'ਕੁਝ ਸਕਿੰਟ',\n            ss: '%d ਸਕਿੰਟ',\n            m: 'ਇਕ ਮਿੰਟ',\n            mm: '%d ਮਿੰਟ',\n            h: 'ਇੱਕ ਘੰਟਾ',\n            hh: '%d ਘੰਟੇ',\n            d: 'ਇੱਕ ਦਿਨ',\n            dd: '%d ਦਿਨ',\n            M: 'ਇੱਕ ਮਹੀਨਾ',\n            MM: '%d ਮਹੀਨੇ',\n            y: 'ਇੱਕ ਸਾਲ',\n            yy: '%d ਸਾਲ',\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap$e[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$f[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(\n            '_'\n        ),\n        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(\n            '_'\n        ),\n        monthsParse$a = [\n            /^sty/i,\n            /^lut/i,\n            /^mar/i,\n            /^kwi/i,\n            /^maj/i,\n            /^cze/i,\n            /^lip/i,\n            /^sie/i,\n            /^wrz/i,\n            /^paź/i,\n            /^lis/i,\n            /^gru/i,\n        ];\n    function plural$3(n) {\n        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n    }\n    function translate$8(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural$3(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural$3(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix ? 'godzina' : 'godzinę';\n            case 'hh':\n                return result + (plural$3(number) ? 'godziny' : 'godzin');\n            case 'ww':\n                return result + (plural$3(number) ? 'tygodnie' : 'tygodni');\n            case 'MM':\n                return result + (plural$3(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural$3(number) ? 'lata' : 'lat');\n        }\n    }\n\n    hooks.defineLocale('pl', {\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        monthsParse: monthsParse$a,\n        longMonthsParse: monthsParse$a,\n        shortMonthsParse: monthsParse$a,\n        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: '%s temu',\n            s: 'kilka sekund',\n            ss: translate$8,\n            m: translate$8,\n            mm: translate$8,\n            h: translate$8,\n            hh: translate$8,\n            d: '1 dzień',\n            dd: '%d dni',\n            w: 'tydzień',\n            ww: translate$8,\n            M: 'miesiąc',\n            MM: translate$8,\n            y: 'rok',\n            yy: translate$8,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt-br', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'poucos segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        invalidDate: 'Data inválida',\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            w: 'uma semana',\n            ww: '%d semanas',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithPlural$2(number, withoutSuffix, key) {\n        var format = {\n                ss: 'secunde',\n                mm: 'minute',\n                hh: 'ore',\n                dd: 'zile',\n                ww: 'săptămâni',\n                MM: 'luni',\n                yy: 'ani',\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    hooks.defineLocale('ro', {\n        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(\n            '_'\n        ),\n        monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'peste %s',\n            past: '%s în urmă',\n            s: 'câteva secunde',\n            ss: relativeTimeWithPlural$2,\n            m: 'un minut',\n            mm: relativeTimeWithPlural$2,\n            h: 'o oră',\n            hh: relativeTimeWithPlural$2,\n            d: 'o zi',\n            dd: relativeTimeWithPlural$2,\n            w: 'o săptămână',\n            ww: relativeTimeWithPlural$2,\n            M: 'o lună',\n            MM: relativeTimeWithPlural$2,\n            y: 'un an',\n            yy: relativeTimeWithPlural$2,\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$4(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural$3(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            hh: 'час_часа_часов',\n            dd: 'день_дня_дней',\n            ww: 'неделя_недели_недель',\n            MM: 'месяц_месяца_месяцев',\n            yy: 'год_года_лет',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        } else {\n            return number + ' ' + plural$4(format[key], +number);\n        }\n    }\n    var monthsParse$b = [\n        /^янв/i,\n        /^фев/i,\n        /^мар/i,\n        /^апр/i,\n        /^ма[йя]/i,\n        /^июн/i,\n        /^июл/i,\n        /^авг/i,\n        /^сен/i,\n        /^окт/i,\n        /^ноя/i,\n        /^дек/i,\n    ];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    hooks.defineLocale('ru', {\n        months: {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(\n                '_'\n            ),\n            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n                '_'\n            ),\n        },\n        monthsShort: {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(\n                '_'\n            ),\n            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(\n                '_'\n            ),\n        },\n        weekdays: {\n            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(\n                '_'\n            ),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(\n                '_'\n            ),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,\n        },\n        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse: monthsParse$b,\n        longMonthsParse: monthsParse$b,\n        shortMonthsParse: monthsParse$b,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соответствует только сокращённым формам\n        monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY г.',\n            LLL: 'D MMMM YYYY г., H:mm',\n            LLLL: 'dddd, D MMMM YYYY г., H:mm',\n        },\n        calendar: {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'через %s',\n            past: '%s назад',\n            s: 'несколько секунд',\n            ss: relativeTimeWithPlural$3,\n            m: relativeTimeWithPlural$3,\n            mm: relativeTimeWithPlural$3,\n            h: 'час',\n            hh: relativeTimeWithPlural$3,\n            d: 'день',\n            dd: relativeTimeWithPlural$3,\n            w: 'неделя',\n            ww: relativeTimeWithPlural$3,\n            M: 'месяц',\n            MM: relativeTimeWithPlural$3,\n            y: 'год',\n            yy: relativeTimeWithPlural$3,\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM: function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$9 = [\n            'جنوري',\n            'فيبروري',\n            'مارچ',\n            'اپريل',\n            'مئي',\n            'جون',\n            'جولاءِ',\n            'آگسٽ',\n            'سيپٽمبر',\n            'آڪٽوبر',\n            'نومبر',\n            'ڊسمبر',\n        ],\n        days$1 = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];\n\n    hooks.defineLocale('sd', {\n        months: months$9,\n        monthsShort: months$9,\n        weekdays: days$1,\n        weekdaysShort: days$1,\n        weekdaysMin: days$1,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd، D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /صبح|شام/,\n        isPM: function (input) {\n            return 'شام' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar: {\n            sameDay: '[اڄ] LT',\n            nextDay: '[سڀاڻي] LT',\n            nextWeek: 'dddd [اڳين هفتي تي] LT',\n            lastDay: '[ڪالهه] LT',\n            lastWeek: '[گزريل هفتي] dddd [تي] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s پوء',\n            past: '%s اڳ',\n            s: 'چند سيڪنڊ',\n            ss: '%d سيڪنڊ',\n            m: 'هڪ منٽ',\n            mm: '%d منٽ',\n            h: 'هڪ ڪلاڪ',\n            hh: '%d ڪلاڪ',\n            d: 'هڪ ڏينهن',\n            dd: '%d ڏينهن',\n            M: 'هڪ مهينو',\n            MM: '%d مهينا',\n            y: 'هڪ سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('se', {\n        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(\n            '_'\n        ),\n        monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(\n            '_'\n        ),\n        weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(\n            '_'\n        ),\n        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'MMMM D. [b.] YYYY',\n            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s geažes',\n            past: 'maŋit %s',\n            s: 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m: 'okta minuhta',\n            mm: '%d minuhtat',\n            h: 'okta diimmu',\n            hh: '%d diimmut',\n            d: 'okta beaivi',\n            dd: '%d beaivvit',\n            M: 'okta mánnu',\n            MM: '%d mánut',\n            y: 'okta jahki',\n            yy: '%d jagit',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    /*jshint -W100*/\n    hooks.defineLocale('si', {\n        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(\n            '_'\n        ),\n        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(\n            '_'\n        ),\n        weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(\n            '_'\n        ),\n        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'a h:mm',\n            LTS: 'a h:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY MMMM D',\n            LLL: 'YYYY MMMM D, a h:mm',\n            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',\n        },\n        calendar: {\n            sameDay: '[අද] LT[ට]',\n            nextDay: '[හෙට] LT[ට]',\n            nextWeek: 'dddd LT[ට]',\n            lastDay: '[ඊයේ] LT[ට]',\n            lastWeek: '[පසුගිය] dddd LT[ට]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sකින්',\n            past: '%sකට පෙර',\n            s: 'තත්පර කිහිපය',\n            ss: 'තත්පර %d',\n            m: 'මිනිත්තුව',\n            mm: 'මිනිත්තු %d',\n            h: 'පැය',\n            hh: 'පැය %d',\n            d: 'දිනය',\n            dd: 'දින %d',\n            M: 'මාසය',\n            MM: 'මාස %d',\n            y: 'වසර',\n            yy: 'වසර %d',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal: function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM: function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$a = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(\n            '_'\n        ),\n        monthsShort$7 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural$5(n) {\n        return n > 1 && n < 5;\n    }\n    function translate$9(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n        }\n    }\n\n    hooks.defineLocale('sk', {\n        months: months$a,\n        monthsShort: monthsShort$7,\n        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'pred %s',\n            s: translate$9,\n            ss: translate$9,\n            m: translate$9,\n            mm: translate$9,\n            h: translate$9,\n            hh: translate$9,\n            d: translate$9,\n            dd: translate$9,\n            M: translate$9,\n            MM: translate$9,\n            y: translate$9,\n            yy: translate$9,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$7(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture\n                    ? 'nekaj sekund'\n                    : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('sl', {\n        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danes ob] LT',\n            nextDay: '[jutri ob] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay: '[včeraj ob] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'čez %s',\n            past: 'pred %s',\n            s: processRelativeTime$7,\n            ss: processRelativeTime$7,\n            m: processRelativeTime$7,\n            mm: processRelativeTime$7,\n            h: processRelativeTime$7,\n            hh: processRelativeTime$7,\n            d: processRelativeTime$7,\n            dd: processRelativeTime$7,\n            M: processRelativeTime$7,\n            MM: processRelativeTime$7,\n            y: processRelativeTime$7,\n            yy: processRelativeTime$7,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sq', {\n        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(\n            '_'\n        ),\n        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact: true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Sot në] LT',\n            nextDay: '[Nesër në] LT',\n            nextWeek: 'dddd [në] LT',\n            lastDay: '[Dje në] LT',\n            lastWeek: 'dddd [e kaluar në] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'në %s',\n            past: '%s më parë',\n            s: 'disa sekonda',\n            ss: '%d sekonda',\n            m: 'një minutë',\n            mm: '%d minuta',\n            h: 'një orë',\n            hh: '%d orë',\n            d: 'një ditë',\n            dd: '%d ditë',\n            M: 'një muaj',\n            MM: '%d muaj',\n            y: 'një vit',\n            yy: '%d vite',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator$1 = {\n        words: {\n            //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једне минуте'],\n            mm: ['минут', 'минуте', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            dd: ['дан', 'дана', 'дана'],\n            MM: ['месец', 'месеца', 'месеци'],\n            yy: ['година', 'године', 'година'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1\n                ? wordKey[0]\n                : number >= 2 && number <= 4\n                ? wordKey[1]\n                : wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator$1.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return (\n                    number +\n                    ' ' +\n                    translator$1.correctGrammaticalCase(number, wordKey)\n                );\n            }\n        },\n    };\n\n    hooks.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(\n            '_'\n        ),\n        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D. M. YYYY.',\n            LL: 'D. MMMM YYYY.',\n            LLL: 'D. MMMM YYYY. H:mm',\n            LLLL: 'dddd, D. MMMM YYYY. H:mm',\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay: '[јуче у] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: 'пре %s',\n            s: 'неколико секунди',\n            ss: translator$1.translate,\n            m: translator$1.translate,\n            mm: translator$1.translate,\n            h: translator$1.translate,\n            hh: translator$1.translate,\n            d: 'дан',\n            dd: translator$1.translate,\n            M: 'месец',\n            MM: translator$1.translate,\n            y: 'годину',\n            yy: translator$1.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator$2 = {\n        words: {\n            //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jedne minute'],\n            mm: ['minut', 'minute', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            yy: ['godina', 'godine', 'godina'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1\n                ? wordKey[0]\n                : number >= 2 && number <= 4\n                ? wordKey[1]\n                : wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator$2.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return (\n                    number +\n                    ' ' +\n                    translator$2.correctGrammaticalCase(number, wordKey)\n                );\n            }\n        },\n    };\n\n    hooks.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D. M. YYYY.',\n            LL: 'D. MMMM YYYY.',\n            LLL: 'D. MMMM YYYY. H:mm',\n            LLLL: 'dddd, D. MMMM YYYY. H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[juče u] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'pre %s',\n            s: 'nekoliko sekundi',\n            ss: translator$2.translate,\n            m: translator$2.translate,\n            mm: translator$2.translate,\n            h: translator$2.translate,\n            hh: translator$2.translate,\n            d: 'dan',\n            dd: translator$2.translate,\n            M: 'mesec',\n            MM: translator$2.translate,\n            y: 'godinu',\n            yy: translator$2.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ss', {\n        months: \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\n            '_'\n        ),\n        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Namuhla nga] LT',\n            nextDay: '[Kusasa nga] LT',\n            nextWeek: 'dddd [nga] LT',\n            lastDay: '[Itolo nga] LT',\n            lastWeek: 'dddd [leliphelile] [nga] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'nga %s',\n            past: 'wenteka nga %s',\n            s: 'emizuzwana lomcane',\n            ss: '%d mzuzwana',\n            m: 'umzuzu',\n            mm: '%d emizuzu',\n            h: 'lihora',\n            hh: '%d emahora',\n            d: 'lilanga',\n            dd: '%d emalanga',\n            M: 'inyanga',\n            MM: '%d tinyanga',\n            y: 'umnyaka',\n            yy: '%d iminyaka',\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: '%d',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sv', {\n        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [kl.] HH:mm',\n            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: 'för %s sedan',\n            s: 'några sekunder',\n            ss: '%d sekunder',\n            m: 'en minut',\n            mm: '%d minuter',\n            h: 'en timme',\n            hh: '%d timmar',\n            d: 'en dag',\n            dd: '%d dagar',\n            M: 'en månad',\n            MM: '%d månader',\n            y: 'ett år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(\\:e|\\:a)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? ':e'\n                        : b === 1\n                        ? ':a'\n                        : b === 2\n                        ? ':a'\n                        : b === 3\n                        ? ':e'\n                        : ':e';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sw', {\n        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(\n            '_'\n        ),\n        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'hh:mm A',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[leo saa] LT',\n            nextDay: '[kesho saa] LT',\n            nextWeek: '[wiki ijayo] dddd [saat] LT',\n            lastDay: '[jana] LT',\n            lastWeek: '[wiki iliyopita] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s baadaye',\n            past: 'tokea %s',\n            s: 'hivi punde',\n            ss: 'sekunde %d',\n            m: 'dakika moja',\n            mm: 'dakika %d',\n            h: 'saa limoja',\n            hh: 'masaa %d',\n            d: 'siku moja',\n            dd: 'siku %d',\n            M: 'mwezi mmoja',\n            MM: 'miezi %d',\n            y: 'mwaka mmoja',\n            yy: 'miaka %d',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$g = {\n            1: '௧',\n            2: '௨',\n            3: '௩',\n            4: '௪',\n            5: '௫',\n            6: '௬',\n            7: '௭',\n            8: '௮',\n            9: '௯',\n            0: '௦',\n        },\n        numberMap$f = {\n            '௧': '1',\n            '௨': '2',\n            '௩': '3',\n            '௪': '4',\n            '௫': '5',\n            '௬': '6',\n            '௭': '7',\n            '௮': '8',\n            '௯': '9',\n            '௦': '0',\n        };\n\n    hooks.defineLocale('ta', {\n        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\n            '_'\n        ),\n        monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\n            '_'\n        ),\n        weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(\n            '_'\n        ),\n        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(\n            '_'\n        ),\n        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, HH:mm',\n            LLLL: 'dddd, D MMMM YYYY, HH:mm',\n        },\n        calendar: {\n            sameDay: '[இன்று] LT',\n            nextDay: '[நாளை] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[நேற்று] LT',\n            lastWeek: '[கடந்த வாரம்] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s இல்',\n            past: '%s முன்',\n            s: 'ஒரு சில விநாடிகள்',\n            ss: '%d விநாடிகள்',\n            m: 'ஒரு நிமிடம்',\n            mm: '%d நிமிடங்கள்',\n            h: 'ஒரு மணி நேரம்',\n            hh: '%d மணி நேரம்',\n            d: 'ஒரு நாள்',\n            dd: '%d நாட்கள்',\n            M: 'ஒரு மாதம்',\n            MM: '%d மாதங்கள்',\n            y: 'ஒரு வருடம்',\n            yy: '%d ஆண்டுகள்',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal: function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap$f[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$g[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை'; // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('te', {\n        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(\n            '_'\n        ),\n        monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(\n            '_'\n        ),\n        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[నేడు] LT',\n            nextDay: '[రేపు] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[నిన్న] LT',\n            lastWeek: '[గత] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s లో',\n            past: '%s క్రితం',\n            s: 'కొన్ని క్షణాలు',\n            ss: '%d సెకన్లు',\n            m: 'ఒక నిమిషం',\n            mm: '%d నిమిషాలు',\n            h: 'ఒక గంట',\n            hh: '%d గంటలు',\n            d: 'ఒక రోజు',\n            dd: '%d రోజులు',\n            M: 'ఒక నెల',\n            MM: '%d నెలలు',\n            y: 'ఒక సంవత్సరం',\n            yy: '%d సంవత్సరాలు',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}వ/,\n        ordinal: '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tet', {\n        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'iha %s',\n            past: '%s liuba',\n            s: 'segundu balun',\n            ss: 'segundu %d',\n            m: 'minutu ida',\n            mm: 'minutu %d',\n            h: 'oras ida',\n            hh: 'oras %d',\n            d: 'loron ida',\n            dd: 'loron %d',\n            M: 'fulan ida',\n            MM: 'fulan %d',\n            y: 'tinan ida',\n            yy: 'tinan %d',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$3 = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум',\n    };\n\n    hooks.defineLocale('tg', {\n        months: {\n            format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(\n                '_'\n            ),\n            standalone: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(\n            '_'\n        ),\n        weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Имрӯз соати] LT',\n            nextDay: '[Фардо соати] LT',\n            lastDay: '[Дирӯз соати] LT',\n            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'баъди %s',\n            past: '%s пеш',\n            s: 'якчанд сония',\n            m: 'як дақиқа',\n            mm: '%d дақиқа',\n            h: 'як соат',\n            hh: '%d соат',\n            d: 'як рӯз',\n            dd: '%d рӯз',\n            M: 'як моҳ',\n            MM: '%d моҳ',\n            y: 'як сол',\n            yy: '%d сол',\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$3[number] || suffixes$3[a] || suffixes$3[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('th', {\n        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(\n            '_'\n        ),\n        monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY เวลา H:mm',\n            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar: {\n            sameDay: '[วันนี้ เวลา] LT',\n            nextDay: '[พรุ่งนี้ เวลา] LT',\n            nextWeek: 'dddd[หน้า เวลา] LT',\n            lastDay: '[เมื่อวานนี้ เวลา] LT',\n            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'อีก %s',\n            past: '%sที่แล้ว',\n            s: 'ไม่กี่วินาที',\n            ss: '%d วินาที',\n            m: '1 นาที',\n            mm: '%d นาที',\n            h: '1 ชั่วโมง',\n            hh: '%d ชั่วโมง',\n            d: '1 วัน',\n            dd: '%d วัน',\n            w: '1 สัปดาห์',\n            ww: '%d สัปดาห์',\n            M: '1 เดือน',\n            MM: '%d เดือน',\n            y: '1 ปี',\n            yy: '%d ปี',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$4 = {\n        1: \"'inji\",\n        5: \"'inji\",\n        8: \"'inji\",\n        70: \"'inji\",\n        80: \"'inji\",\n        2: \"'nji\",\n        7: \"'nji\",\n        20: \"'nji\",\n        50: \"'nji\",\n        3: \"'ünji\",\n        4: \"'ünji\",\n        100: \"'ünji\",\n        6: \"'njy\",\n        9: \"'unjy\",\n        10: \"'unjy\",\n        30: \"'unjy\",\n        60: \"'ynjy\",\n        90: \"'ynjy\",\n    };\n\n    hooks.defineLocale('tk', {\n        months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),\n        weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(\n            '_'\n        ),\n        weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),\n        weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün sagat] LT',\n            nextDay: '[ertir sagat] LT',\n            nextWeek: '[indiki] dddd [sagat] LT',\n            lastDay: '[düýn] LT',\n            lastWeek: '[geçen] dddd [sagat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s soň',\n            past: '%s öň',\n            s: 'birnäçe sekunt',\n            m: 'bir minut',\n            mm: '%d minut',\n            h: 'bir sagat',\n            hh: '%d sagat',\n            d: 'bir gün',\n            dd: '%d gün',\n            M: 'bir aý',\n            MM: '%d aý',\n            y: 'bir ýyl',\n            yy: '%d ýyl',\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {\n                        // special case for zero\n                        return number + \"'unjy\";\n                    }\n                    var a = number % 10,\n                        b = (number % 100) - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$4[a] || suffixes$4[b] || suffixes$4[c]);\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tl-ph', {\n        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(\n            '_'\n        ),\n        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'MM/D/YYYY',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY HH:mm',\n            LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'sa loob ng %s',\n            past: '%s ang nakalipas',\n            s: 'ilang segundo',\n            ss: '%d segundo',\n            m: 'isang minuto',\n            mm: '%d minuto',\n            h: 'isang oras',\n            hh: '%d oras',\n            d: 'isang araw',\n            dd: '%d araw',\n            M: 'isang buwan',\n            MM: '%d buwan',\n            y: 'isang taon',\n            yy: '%d taon',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'leS'\n                : output.indexOf('jar') !== -1\n                ? time.slice(0, -3) + 'waQ'\n                : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'nem'\n                : time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'Hu’'\n                : output.indexOf('jar') !== -1\n                ? time.slice(0, -3) + 'wen'\n                : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'ben'\n                : time + ' ret';\n        return time;\n    }\n\n    function translate$a(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n            ten = Math.floor((number % 100) / 10),\n            one = number % 10,\n            word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[one];\n        }\n        return word === '' ? 'pagh' : word;\n    }\n\n    hooks.defineLocale('tlh', {\n        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(\n            '_'\n        ),\n        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: translateFuture,\n            past: translatePast,\n            s: 'puS lup',\n            ss: translate$a,\n            m: 'wa’ tup',\n            mm: translate$a,\n            h: 'wa’ rep',\n            hh: translate$a,\n            d: 'wa’ jaj',\n            dd: translate$a,\n            M: 'wa’ jar',\n            MM: translate$a,\n            y: 'wa’ DIS',\n            yy: translate$a,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$5 = {\n        1: \"'inci\",\n        5: \"'inci\",\n        8: \"'inci\",\n        70: \"'inci\",\n        80: \"'inci\",\n        2: \"'nci\",\n        7: \"'nci\",\n        20: \"'nci\",\n        50: \"'nci\",\n        3: \"'üncü\",\n        4: \"'üncü\",\n        100: \"'üncü\",\n        6: \"'ncı\",\n        9: \"'uncu\",\n        10: \"'uncu\",\n        30: \"'uncu\",\n        60: \"'ıncı\",\n        90: \"'ıncı\",\n    };\n\n    hooks.defineLocale('tr', {\n        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(\n            '_'\n        ),\n        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(\n            '_'\n        ),\n        weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'öö' : 'ÖÖ';\n            } else {\n                return isLower ? 'ös' : 'ÖS';\n            }\n        },\n        meridiemParse: /öö|ÖÖ|ös|ÖS/,\n        isPM: function (input) {\n            return input === 'ös' || input === 'ÖS';\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün saat] LT',\n            nextDay: '[yarın saat] LT',\n            nextWeek: '[gelecek] dddd [saat] LT',\n            lastDay: '[dün] LT',\n            lastWeek: '[geçen] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s sonra',\n            past: '%s önce',\n            s: 'birkaç saniye',\n            ss: '%d saniye',\n            m: 'bir dakika',\n            mm: '%d dakika',\n            h: 'bir saat',\n            hh: '%d saat',\n            d: 'bir gün',\n            dd: '%d gün',\n            w: 'bir hafta',\n            ww: '%d hafta',\n            M: 'bir ay',\n            MM: '%d ay',\n            y: 'bir yıl',\n            yy: '%d yıl',\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {\n                        // special case for zero\n                        return number + \"'ıncı\";\n                    }\n                    var a = number % 10,\n                        b = (number % 100) - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$5[a] || suffixes$5[b] || suffixes$5[c]);\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    hooks.defineLocale('tzl', {\n        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM [dallas] YYYY',\n            LLL: 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM: function (input) {\n            return \"d'o\" === input.toLowerCase();\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? \"d'o\" : \"D'O\";\n            } else {\n                return isLower ? \"d'a\" : \"D'A\";\n            }\n        },\n        calendar: {\n            sameDay: '[oxhi à] LT',\n            nextDay: '[demà à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[ieiri à] LT',\n            lastWeek: '[sür el] dddd [lasteu à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'osprei %s',\n            past: 'ja%s',\n            s: processRelativeTime$8,\n            ss: processRelativeTime$8,\n            m: processRelativeTime$8,\n            mm: processRelativeTime$8,\n            h: processRelativeTime$8,\n            hh: processRelativeTime$8,\n            d: processRelativeTime$8,\n            dd: processRelativeTime$8,\n            M: processRelativeTime$8,\n            MM: processRelativeTime$8,\n            y: processRelativeTime$8,\n            yy: processRelativeTime$8,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    function processRelativeTime$8(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['viensas secunds', \"'iensas secunds\"],\n            ss: [number + ' secunds', '' + number + ' secunds'],\n            m: [\"'n míut\", \"'iens míut\"],\n            mm: [number + ' míuts', '' + number + ' míuts'],\n            h: [\"'n þora\", \"'iensa þora\"],\n            hh: [number + ' þoras', '' + number + ' þoras'],\n            d: [\"'n ziua\", \"'iensa ziua\"],\n            dd: [number + ' ziuas', '' + number + ' ziuas'],\n            M: [\"'n mes\", \"'iens mes\"],\n            MM: [number + ' mesen', '' + number + ' mesen'],\n            y: [\"'n ar\", \"'iens ar\"],\n            yy: [number + ' ars', '' + number + ' ars'],\n        };\n        return isFuture\n            ? format[key][0]\n            : withoutSuffix\n            ? format[key][0]\n            : format[key][1];\n    }\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm-latn', {\n        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(\n            '_'\n        ),\n        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(\n            '_'\n        ),\n        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dadkh s yan %s',\n            past: 'yan %s',\n            s: 'imik',\n            ss: '%d imik',\n            m: 'minuḍ',\n            mm: '%d minuḍ',\n            h: 'saɛa',\n            hh: '%d tassaɛin',\n            d: 'ass',\n            dd: '%d ossan',\n            M: 'ayowr',\n            MM: '%d iyyirn',\n            y: 'asgas',\n            yy: '%d isgasn',\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm', {\n        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(\n            '_'\n        ),\n        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(\n            '_'\n        ),\n        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past: 'ⵢⴰⵏ %s',\n            s: 'ⵉⵎⵉⴽ',\n            ss: '%d ⵉⵎⵉⴽ',\n            m: 'ⵎⵉⵏⵓⴺ',\n            mm: '%d ⵎⵉⵏⵓⴺ',\n            h: 'ⵙⴰⵄⴰ',\n            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d: 'ⴰⵙⵙ',\n            dd: '%d oⵙⵙⴰⵏ',\n            M: 'ⴰⵢoⵓⵔ',\n            MM: '%d ⵉⵢⵢⵉⵔⵏ',\n            y: 'ⴰⵙⴳⴰⵙ',\n            yy: '%d ⵉⵙⴳⴰⵙⵏ',\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل',\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$6(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n            ? forms[1]\n            : forms[2];\n    }\n    function relativeTimeWithPlural$4(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural$6(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                    '_'\n                ),\n                accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                    '_'\n                ),\n                genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                    '_'\n                ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n            ? 'genitive'\n            : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    hooks.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural$4,\n            m: relativeTimeWithPlural$4,\n            mm: relativeTimeWithPlural$4,\n            h: 'годину',\n            hh: relativeTimeWithPlural$4,\n            d: 'день',\n            dd: relativeTimeWithPlural$4,\n            M: 'місяць',\n            MM: relativeTimeWithPlural$4,\n            y: 'рік',\n            yy: relativeTimeWithPlural$4,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$b = [\n            'جنوری',\n            'فروری',\n            'مارچ',\n            'اپریل',\n            'مئی',\n            'جون',\n            'جولائی',\n            'اگست',\n            'ستمبر',\n            'اکتوبر',\n            'نومبر',\n            'دسمبر',\n        ],\n        days$2 = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];\n\n    hooks.defineLocale('ur', {\n        months: months$b,\n        monthsShort: months$b,\n        weekdays: days$2,\n        weekdaysShort: days$2,\n        weekdaysMin: days$2,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd، D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /صبح|شام/,\n        isPM: function (input) {\n            return 'شام' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar: {\n            sameDay: '[آج بوقت] LT',\n            nextDay: '[کل بوقت] LT',\n            nextWeek: 'dddd [بوقت] LT',\n            lastDay: '[گذشتہ روز بوقت] LT',\n            lastWeek: '[گذشتہ] dddd [بوقت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s بعد',\n            past: '%s قبل',\n            s: 'چند سیکنڈ',\n            ss: '%d سیکنڈ',\n            m: 'ایک منٹ',\n            mm: '%d منٹ',\n            h: 'ایک گھنٹہ',\n            hh: '%d گھنٹے',\n            d: 'ایک دن',\n            dd: '%d دن',\n            M: 'ایک ماہ',\n            MM: '%d ماہ',\n            y: 'ایک سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz-latn', {\n        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(\n            '_'\n        ),\n        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'D MMMM YYYY, dddd HH:mm',\n        },\n        calendar: {\n            sameDay: '[Bugun soat] LT [da]',\n            nextDay: '[Ertaga] LT [da]',\n            nextWeek: 'dddd [kuni soat] LT [da]',\n            lastDay: '[Kecha soat] LT [da]',\n            lastWeek: \"[O'tgan] dddd [kuni soat] LT [da]\",\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'Yaqin %s ichida',\n            past: 'Bir necha %s oldin',\n            s: 'soniya',\n            ss: '%d soniya',\n            m: 'bir daqiqa',\n            mm: '%d daqiqa',\n            h: 'bir soat',\n            hh: '%d soat',\n            d: 'bir kun',\n            dd: '%d kun',\n            M: 'bir oy',\n            MM: '%d oy',\n            y: 'bir yil',\n            yy: '%d yil',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz', {\n        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(\n            '_'\n        ),\n        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'D MMMM YYYY, dddd HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бугун соат] LT [да]',\n            nextDay: '[Эртага] LT [да]',\n            nextWeek: 'dddd [куни соат] LT [да]',\n            lastDay: '[Кеча соат] LT [да]',\n            lastWeek: '[Утган] dddd [куни соат] LT [да]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'Якин %s ичида',\n            past: 'Бир неча %s олдин',\n            s: 'фурсат',\n            ss: '%d фурсат',\n            m: 'бир дакика',\n            mm: '%d дакика',\n            h: 'бир соат',\n            hh: '%d соат',\n            d: 'бир кун',\n            dd: '%d кун',\n            M: 'бир ой',\n            MM: '%d ой',\n            y: 'бир йил',\n            yy: '%d йил',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('vi', {\n        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(\n            '_'\n        ),\n        monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(\n            '_'\n        ),\n        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact: true,\n        meridiemParse: /sa|ch/i,\n        isPM: function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [năm] YYYY',\n            LLL: 'D MMMM [năm] YYYY HH:mm',\n            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n            l: 'DD/M/YYYY',\n            ll: 'D MMM YYYY',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd, D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần trước lúc] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s tới',\n            past: '%s trước',\n            s: 'vài giây',\n            ss: '%d giây',\n            m: 'một phút',\n            mm: '%d phút',\n            h: 'một giờ',\n            hh: '%d giờ',\n            d: 'một ngày',\n            dd: '%d ngày',\n            w: 'một tuần',\n            ww: '%d tuần',\n            M: 'một tháng',\n            MM: '%d tháng',\n            y: 'một năm',\n            yy: '%d năm',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('x-pseudo', {\n        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(\n            '_'\n        ),\n        monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(\n            '_'\n        ),\n        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[T~ódá~ý át] LT',\n            nextDay: '[T~ómó~rró~w át] LT',\n            nextWeek: 'dddd [át] LT',\n            lastDay: '[Ý~ést~érdá~ý át] LT',\n            lastWeek: '[L~ást] dddd [át] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'í~ñ %s',\n            past: '%s á~gó',\n            s: 'á ~féw ~sécó~ñds',\n            ss: '%d s~écóñ~ds',\n            m: 'á ~míñ~úté',\n            mm: '%d m~íñú~tés',\n            h: 'á~ñ hó~úr',\n            hh: '%d h~óúrs',\n            d: 'á ~dáý',\n            dd: '%d d~áýs',\n            M: 'á ~móñ~th',\n            MM: '%d m~óñt~hs',\n            y: 'á ~ýéár',\n            yy: '%d ý~éárs',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('yo', {\n        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(\n            '_'\n        ),\n        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Ònì ni] LT',\n            nextDay: '[Ọ̀la ni] LT',\n            nextWeek: \"dddd [Ọsẹ̀ tón'bọ] [ni] LT\",\n            lastDay: '[Àna ni] LT',\n            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ní %s',\n            past: '%s kọjá',\n            s: 'ìsẹjú aayá die',\n            ss: 'aayá %d',\n            m: 'ìsẹjú kan',\n            mm: 'ìsẹjú %d',\n            h: 'wákati kan',\n            hh: 'wákati %d',\n            d: 'ọjọ́ kan',\n            dd: 'ọjọ́ %d',\n            M: 'osù kan',\n            MM: 'osù %d',\n            y: 'ọdún kan',\n            yy: 'ọdún %d',\n        },\n        dayOfMonthOrdinalParse: /ọjọ́\\s\\d{1,2}/,\n        ordinal: 'ọjọ́ %d',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-cn', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日Ah点mm分',\n            LLLL: 'YYYY年M月D日ddddAh点mm分',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天]LT',\n            nextDay: '[明天]LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    return '[下]dddLT';\n                } else {\n                    return '[本]dddLT';\n                }\n            },\n            lastDay: '[昨天]LT',\n            lastWeek: function (now) {\n                if (this.week() !== now.week()) {\n                    return '[上]dddLT';\n                } else {\n                    return '[本]dddLT';\n                }\n            },\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s后',\n            past: '%s前',\n            s: '几秒',\n            ss: '%d 秒',\n            m: '1 分钟',\n            mm: '%d 分钟',\n            h: '1 小时',\n            hh: '%d 小时',\n            d: '1 天',\n            dd: '%d 天',\n            w: '1 周',\n            ww: '%d 周',\n            M: '1 个月',\n            MM: '%d 个月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-hk', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1200) {\n                return '上午';\n            } else if (hm === 1200) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天]LT',\n            nextDay: '[明天]LT',\n            nextWeek: '[下]ddddLT',\n            lastDay: '[昨天]LT',\n            lastWeek: '[上]ddddLT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-mo', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'D/M/YYYY',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天] LT',\n            nextDay: '[明天] LT',\n            nextWeek: '[下]dddd LT',\n            lastDay: '[昨天] LT',\n            lastWeek: '[上]dddd LT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s內',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-tw', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天] LT',\n            nextDay: '[明天] LT',\n            nextWeek: '[下]dddd LT',\n            lastDay: '[昨天] LT',\n            lastWeek: '[上]dddd LT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    hooks.locale('en');\n\n    return hooks;\n\n})));\n"],"names":["global","factory","this","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","hasOwnProp","a","b","hasOwnProperty","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","push","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidEra","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","era","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","len","momentProperties","updateInProgress","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","Moment","config","updateOffset","isMoment","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","key","args","_typeof","slice","join","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","zeroFill","number","targetLength","forceSign","absNumber","Math","abs","zerosToFill","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","isLeapYear","year","absFloor","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","regexes","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","indexOf","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","defaultLocaleMonths","split","defaultLocaleMonthsShort","MONTHS_IN_FORMAT","defaultMonthsShortRegex","defaultMonthsRegex","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","setMonth","dayOfMonth","min","getSetMonth","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","daysInYear","y","parseTwoDigitYear","parseInt","getSetYear","createDate","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","dayOfYear","weekOfYear","resWeek","weekOffset","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","day","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","w","ww","MM","yy","meridiemParse","locales","localeFamilies","commonPrefix","arr1","arr2","minl","normalizeLocale","loadLocale","oldLocale","module","exports","_abbr","require","getSetGlobalLocale","e","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","result","weekdayStr","parsedInput","getDay","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","setUTCMinutes","getUTCMinutes","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","curWeek","GG","W","E","createLocal","_week","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","erasConvertYear","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","validFormatFound","bestFormatIsValid","score","configFromStringAndArray","createFromInputFallback","configFromString","dayOrDate","minute","second","millisecond","configFromObject","configFromInput","isUTC","add","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","chunkOffset","matcher","parts","matches","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","base","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","isString","String","isMomentInput","arrayTest","dataTypeTest","filter","item","isNumberOrStringArray","property","objectTest","propertyTest","properties","isMomentInputObject","isCalendarSpec","monthDiff","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","matchEraAbbr","erasAbbrRegex","computeErasParse","abbrPieces","namePieces","narrowPieces","eras","narrow","_erasRegex","_erasNameRegex","_erasAbbrRegex","_erasNarrowRegex","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","setWeekAll","dayOfYearData","erasNameRegex","erasNarrowRegex","erasParse","_eraYearOrdinalRegex","eraYearOrdinalParse","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetMillisecond","getSetSecond","parseMs","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","prefix","suffix","zone","isLocal","Symbol","for","toJSON","unix","creationData","eraName","since","until","eraNarrow","eraAbbr","eraYear","dir","isoWeeks","weekInfo","weeksInWeekYear","isoWeeksInYear","isoWeeksInISOWeekYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","array1","array2","dontConvert","lengthDiff","diffs","compareArrays","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","tok","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","_eras","isFormat","_monthsShort","_monthsParseExact","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","_weekdaysParseExact","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","substituteTimeAgo","abs$1","toISOString$1","totalSign","ymSign","daysSign","hmsSign","total","toFixed","proto$2","monthsFromDays","argWithSuffix","argThresholds","withSuffix","th","assign","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","DATE","TIME","TIME_SECONDS","TIME_MS","WEEK","MONTH","pluralForm","plurals","pluralize","f","str","months$1","weekdaysParseExact","symbolMap","pluralForm$1","plurals$1","pluralize$1","months$2","symbolMap$1","numberMap","symbolMap$2","numberMap$1","pluralForm$2","plurals$2","pluralize$2","months$3","suffixes","relativeTimeWithPlural","word","num","forms","plural","standalone","lastDigit","last2Digits","symbolMap$3","numberMap$2","symbolMap$4","numberMap$3","symbolMap$5","numberMap$4","relativeTimeWithMutation","text","mutationTable","substring","softMutation","mutation","lastNumber","monthsParseExact","monthsRegex$1","minWeekdaysParse","translate","fullWeekdaysParse","shortWeekdaysParse","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","ll","lll","llll","months$4","monthsParse$1","monthsRegex$2","plural$1","translate$1","processRelativeTime","processRelativeTime$1","processRelativeTime$2","months$5","monthsNominativeEl","monthsGenitiveEl","momentToFormat","_monthsGenitiveEl","_monthsNominativeEl","calendarEl","_calendarEl","monthsShortDot","monthsShort$1","monthsParse$2","monthsRegex$3","monthsShortDot$1","monthsShort$2","monthsParse$3","monthsRegex$4","monthsShortDot$2","monthsShort$3","monthsParse$4","monthsRegex$5","monthsShortDot$3","monthsShort$4","monthsParse$5","monthsRegex$6","processRelativeTime$3","symbolMap$6","numberMap$5","numbersPast","numbersFuture","translate$2","verbalNumber","monthsRegex$7","monthsParse$6","monthsShortWithDots","monthsShortWithoutDots","processRelativeTime$4","processRelativeTime$5","symbolMap$7","numberMap$6","symbolMap$8","numberMap$7","monthsParse$7","translate$3","weekEndings","translate$4","plural$2","translate$5","eraYearOrdinalRegex","$0","$1","$2","suffixes$1","symbolMap$9","numberMap$8","symbolMap$a","numberMap$9","isUpper","symbolMap$b","numberMap$a","months$8","suffixes$2","processRelativeTime$6","eifelerRegelAppliesToNumber","translateSingular","special","translate$6","units$1","format$1","relativeTimeWithPlural$1","relativeTimeWithSingular","translator","words","correctGrammaticalCase","wordKey","translate$7","symbolMap$c","numberMap$b","relativeTimeMr","symbolMap$d","numberMap$c","symbolMap$e","numberMap$d","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$8","monthsRegex$8","monthsShortWithDots$2","monthsShortWithoutDots$2","monthsParse$9","monthsRegex$9","symbolMap$f","numberMap$e","monthsNominative","monthsSubjective","monthsParse$a","plural$3","translate$8","relativeTimeWithPlural$2","relativeTimeWithPlural$3","plural$4","monthsParse$b","months$9","days$1","months$a","monthsShort$7","plural$5","translate$9","processRelativeTime$7","translator$1","translator$2","symbolMap$g","numberMap$f","suffixes$3","suffixes$4","numbersNouns","translate$a","numberNoun","hundred","ten","one","numberAsNoun","suffixes$5","processRelativeTime$8","relativeTimeWithPlural$4","plural$6","processHoursFunction","nominative","accusative","genitive","months$b","days$2","define","amd","moment"],"mappings":"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"}