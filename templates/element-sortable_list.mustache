{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template local_cltools/element-sortable_list.mustache


    Example context (json):
    {
        "element": {
            "id": "id_xxxx",
            "nameraw": "sortablelist",
            "name": "sortablelist",
            "label": null,
            "multiple": null,
            "checked": null,
            "error": null,
            "size": null,
            "value": null,
            "helpbutton": "",
            "hiddenlabel": false,
            "frozen": false,
            "hardfrozen": false,
            "extraclasses": null,
            "type": "select",
            "attributes": "",
            "options": [{ 'text': 'Text value', 'value': '134' },...]
        }
    }
}}
{{< core_form/element-template }}
    {{$element}}
        <ul id="{{element.id}}-ui" class="list-group">
            {{#element.options}}
                <li class="list-group-item" data-name="{{text}}" data-value="{{value}}">
                    {{^element.frozen}}
                        {{> core/drag_handle}}
                    {{/element.frozen}}{{{text}}}
                </li>
            {{/element.options}}
        </ul>
        <input type="hidden" name="{{element.name}}" id="{{element.id}}" value="{{element.listitems}}">
    {{/element}}
{{/ core_form/element-template }}
{{^element.frozen}}
    {{#js}}
        require(['jquery', 'core/sortable_list'], function($, SortableList) {
        var list = new SortableList('#{{element.id}}-ui');
        $('#{{element.id}}-ui > *').on(SortableList.EVENTS.DROP, function(evt, info) {
            var sortedvalue = $('#{{element.id}}-ui > li:not(.sortable-list-is-dragged)').map(function() {
                    return $(this).data('value');
            }).get().join(", ");
            $('#{{element.id}}').val(sortedvalue);
        });
        list.getElementName = function(element) {
            return $.Deferred().resolve(element.attr('data-name'));
        }
        });
    {{/js}}
{{/element.frozen}}
